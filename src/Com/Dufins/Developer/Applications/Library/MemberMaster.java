/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.Dufins.Developer.Applications.Library;

import Util.Coloumnautosizer;
import Util.Util;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NITISH SRIVASTAVA
 */
public class MemberMaster extends javax.swing.JPanel {

    /**
     * Creates new form MemberMaster
     */
    Connection connection = null;
    ResultSet rsmem;
    int rspos = 0;
    int rscount = 0;
    boolean chadd = false;

    public MemberMaster() {
        initComponents();
        TxtOtherType.setEnabled(false);
        try {

            ClearText();

            while (jTable1.getRowCount() > 0) {
                ((DefaultTableModel) jTable1.getModel()).removeRow(0);

            }

            connection = Util.getConnection();
            ResultSet rs;

            //get mem count
            PreparedStatement stmt;
            mem_count();

            //get mem details
            mem_details();

            //display first record
            rsmem.first();

            Display();


            jTable2.getColumnModel().getColumn(0).setHeaderValue("ROLL NUMBER");
            jTable2.getColumnModel().getColumn(1).setHeaderValue("ENROLLMENT NUMBER");
            jTable2.getColumnModel().getColumn(2).setHeaderValue("NAME");
            jTable2.getColumnModel().getColumn(3).setHeaderValue("COURSE");
            jTable2.getColumnModel().getColumn(4).setHeaderValue("BATCH");
            jTable2.getColumnModel().getColumn(5).setHeaderValue("SESSION");
            jTable2.getColumnModel().getColumn(6).setHeaderValue("ADDRESS");
            jTable2.getColumnModel().getColumn(7).setHeaderValue("E-MAIL");
            jTable2.getColumnModel().getColumn(8).setHeaderValue("MOBILE NUMBER");

            jTable2.getTableHeader().resizeAndRepaint();

            studentsDetails();

        } catch (Exception e) {
            System.err.println(e);
            //System.exit(1);
        }


    }

    public void mem_count() {
        try {
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery("select count(*) from membermaster");
            rs.first();
            rscount = rs.getInt(1);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void mem_details() {
        try {
            Statement stmt1 = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sqlQuery = "select * from membermaster order by mem_id";
            rsmem = stmt1.executeQuery(sqlQuery);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void studentsDetails() {
        try {
            Statement stmt1 = connection.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            String sqlQuery = "select s.roll_number as 'ROLL NUMBER', s.enrollment_number as 'ENROLLMENT NUMBER', concat(s.first_name, ' ', s.middle_name,' ', s.last_name) as 'NAME', s.COURSE, s.BRANCH, s.SESSION, concat(a.padd,'\n',a.pcity,'\n(',a.pstate,')\n',a.pcountry,'\n',a.ppin) as 'ADDRESS', a.pmail as 'EMAIL', a.mobileno as 'MOBILE NUMBER' from student_details s join student_address a on s.roll_number = a.roll_number where s.lib_member = 'N' or s.lib_member = '' or s.lib_member IS NULL order by s.roll_number";
            ResultSet rssd = stmt1.executeQuery(sqlQuery);
            jTable2.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rssd));
            Coloumnautosizer.sizeColumnsToFit(jTable2);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        MemberStock = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        LblPosition = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TxtMobileNo = new javax.swing.JTextField();
        ChkMemActive = new javax.swing.JCheckBox();
        TxtEmailID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TxtName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        TxtMemID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        TxtAddress = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        CbStudent = new javax.swing.JCheckBox();
        CbStaff = new javax.swing.JCheckBox();
        CbOther = new javax.swing.JCheckBox();
        TxtOtherType = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        BtnSave = new javax.swing.JLabel();
        BtnEdit = new javax.swing.JLabel();
        CmdNew = new javax.swing.JLabel();
        CmdLast = new javax.swing.JLabel();
        CmdNext = new javax.swing.JLabel();
        CmdPrevious = new javax.swing.JLabel();
        CmdFirst = new javax.swing.JLabel();

        MemberStock.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                MemberStockWindowClosing(evt);
            }
        });
        MemberStock.getContentPane().setLayout(new javax.swing.BoxLayout(MemberStock.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        MemberStock.getContentPane().add(jScrollPane2);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        LblPosition.setText("Book ID:");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        TxtMobileNo.setText("jTextField1");

        ChkMemActive.setBackground(new java.awt.Color(255, 204, 0));
        ChkMemActive.setText("Member Active");
        ChkMemActive.setEnabled(false);

        TxtEmailID.setText("jTextField1");

        jLabel5.setText("Email ID:");

        jLabel6.setText("Mobile No:");

        jLabel3.setText("Name:");

        jLabel2.setText("Member ID:");

        TxtName.setText("jTextField1");
        TxtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Address:");

        TxtMemID.setEditable(false);
        TxtMemID.setText("jTextField1");

        TxtAddress.setColumns(13);
        TxtAddress.setLineWrap(true);
        TxtAddress.setRows(1);
        TxtAddress.setWrapStyleWord(true);
        TxtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TxtAddressKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(TxtAddress);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Member Type"));

        CbStudent.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(CbStudent);
        CbStudent.setText("Student");
        CbStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbStudentActionPerformed(evt);
            }
        });

        CbStaff.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(CbStaff);
        CbStaff.setText("Staff");
        CbStaff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbStaffActionPerformed(evt);
            }
        });

        CbOther.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(CbOther);
        CbOther.setText("Other");
        CbOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbOtherActionPerformed(evt);
            }
        });

        TxtOtherType.setText("jTextField1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(CbStudent)
                .addGap(18, 18, 18)
                .addComponent(CbStaff)
                .addGap(18, 18, 18)
                .addComponent(CbOther)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TxtOtherType, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CbStudent)
                    .addComponent(CbStaff)
                    .addComponent(CbOther)
                    .addComponent(TxtOtherType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nilaicon.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(33, 33, 33)
                                    .addComponent(TxtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(41, 41, 41)
                                        .addComponent(TxtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(40, 40, 40)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(52, 52, 52)
                                            .addComponent(TxtName, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(TxtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(115, 115, 115)
                        .addComponent(ChkMemActive)))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(TxtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel3))
                    .addComponent(TxtName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel5))
                    .addComponent(TxtEmailID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel6))
                    .addComponent(TxtMobileNo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ChkMemActive)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9"
            }
        ));
        jTable2.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);
        jScrollPane3.getViewport().setBackground(Color.WHITE);

        BtnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/save_as.png"))); // NOI18N
        BtnSave.setToolTipText("Save");
        BtnSave.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnSaveMouseClicked(evt);
            }
        });

        BtnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/edit Icon.jpg"))); // NOI18N
        BtnEdit.setToolTipText("Edit");
        BtnEdit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnEdit.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnEditMouseClicked(evt);
            }
        });

        CmdNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/client.png"))); // NOI18N
        CmdNew.setToolTipText("New");
        CmdNew.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdNew.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdNewMouseClicked(evt);
            }
        });

        CmdLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/media-skip-forward-7_1.png"))); // NOI18N
        CmdLast.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdLast.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdLast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdLastMouseClicked(evt);
            }
        });

        CmdNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/media-seek-forward-7.png"))); // NOI18N
        CmdNext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdNextMouseClicked(evt);
            }
        });

        CmdPrevious.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/media-seek-backward-7.png"))); // NOI18N
        CmdPrevious.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdPrevious.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdPrevious.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdPreviousMouseClicked(evt);
            }
        });

        CmdFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/media-skip-backward-7_1.png"))); // NOI18N
        CmdFirst.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdFirst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdFirst.setPreferredSize(new java.awt.Dimension(36, 36));
        CmdFirst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdFirstMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 440, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(LblPosition))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CmdFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CmdPrevious)
                                .addGap(18, 18, 18)
                                .addComponent(CmdNext)
                                .addGap(18, 18, 18)
                                .addComponent(CmdLast)
                                .addGap(18, 18, 18)
                                .addComponent(CmdNew)
                                .addGap(19, 19, 19)
                                .addComponent(BtnEdit)
                                .addGap(19, 19, 19)
                                .addComponent(BtnSave)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(LblPosition)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(CmdFirst, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CmdPrevious, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CmdNext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CmdLast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CmdNew, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnSave))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void Display() {
        try {
            mem_count();
            //clear text of fields for entry/display old data
            TxtMemID.setText(rsmem.getString("mem_id"));
            TxtName.setText(rsmem.getString("mem_name"));
            TxtAddress.setText(rsmem.getString("mem_address"));
            TxtEmailID.setText(rsmem.getString("mem_email_id"));
            TxtMobileNo.setText(rsmem.getString("mem_mobile_no"));
            if (rsmem.getString("mem_type").equalsIgnoreCase("Student")) {
                CbStudent.setSelected(true);
                TxtOtherType.setText("");
            } else if (rsmem.getString("mem_type").equalsIgnoreCase("Staff")) {
                CbStaff.setSelected(true);
                TxtOtherType.setText("");
            } else {
                CbOther.setSelected(true);
                TxtOtherType.setText(rsmem.getString("mem_type"));
            }

            if (rsmem.getString("mem_active").equals("Y")) {
                ChkMemActive.setSelected(true);
            } else {
                ChkMemActive.setSelected(false);
            }


            LblPosition.setText("Record position : " + rsmem.getRow() + "/" + String.valueOf(rscount));
        } catch (Exception e) {
            e.printStackTrace();

        }
    }

    private void ClearText() {
        //clear text of fields for entry/display old data
        TxtMemID.setText("");
        TxtName.setText("");
        TxtAddress.setText("");
        TxtEmailID.setText("");
        TxtMobileNo.setText("");
        TxtOtherType.setText("");

        ChkMemActive.setSelected(false);
        CbStudent.setSelected(true);

        LblPosition.setText("");
    }
    private void CbOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbOtherActionPerformed
        // TODO add your handling code here:
        if (CbOther.isSelected()) {
            TxtOtherType.setEnabled(true);
        } else {
            TxtOtherType.setEnabled(false);
            TxtOtherType.setText("");
        }
    }//GEN-LAST:event_CbOtherActionPerformed

    private void CbStaffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbStaffActionPerformed
        // TODO add your handling code here:
        if (CbOther.isSelected()) {
            TxtOtherType.setEnabled(true);
        } else {
            TxtOtherType.setEnabled(false);
            TxtOtherType.setText("");
        }
    }//GEN-LAST:event_CbStaffActionPerformed

    private void CbStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbStudentActionPerformed
        // TODO add your handling code here:
        if (CbOther.isSelected()) {
            TxtOtherType.setEnabled(true);
        } else {
            TxtOtherType.setEnabled(false);
            TxtOtherType.setText("");
        }
    }//GEN-LAST:event_CbStudentActionPerformed

    private void TxtAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtAddressKeyPressed
        // TODO add your handling code here:
        int code = java.awt.event.KeyEvent.VK_TAB;
        if (code == evt.getKeyCode()) {
            TxtEmailID.requestFocus();
        }
    }//GEN-LAST:event_TxtAddressKeyPressed

    private void TxtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNameActionPerformed
        // TODO add your handling code here:
        try {
            PreparedStatement pstmt = connection.prepareStatement("select mem_id, mem_name from membermaster where mem_name like '" + TxtName.getText() + "%'");
            rsmem = pstmt.executeQuery();

            jTable1.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rsmem));
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Member ID");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Member Name");
            jTable1.getTableHeader().resizeAndRepaint();
            MemberStock.setVisible(true);
            MemberStock.setBounds(600, 250, 600, 300);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No data available.");
            MemberStock.setVisible(false);
            e.printStackTrace();
        }
    }//GEN-LAST:event_TxtNameActionPerformed

    private void MemberStockWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_MemberStockWindowClosing
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        if (jTable1.getRowCount() > 0) {
            String MemID = jTable1.getValueAt(row, 0).toString();
            try {
                Statement stmt2 = connection.createStatement();
                rsmem = stmt2.executeQuery("select * from membermaster where mem_id = '" + MemID + "'");
                if (rsmem.next()) {
                    Display();
                } else {
                    JOptionPane.showMessageDialog(this, "Data does not available.");
                    ClearText();
                }
                stmt2.close();
                mem_details();
                rspos = Integer.parseInt(TxtMemID.getText());
                rsmem.absolute(rspos);
                LblPosition.setText("Record position : " + rsmem.getRow() + "/" + String.valueOf(rscount));
            } catch (Exception e) {
                MemberStock.setVisible(false);
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Data not available");
        }
    }//GEN-LAST:event_MemberStockWindowClosing

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        int row = jTable2.getSelectedRow();

        TxtMemID.setText("");
        TxtName.setText(jTable2.getValueAt(row, 2).toString());
        TxtAddress.setText(jTable2.getValueAt(row, 6).toString());
        TxtEmailID.setText(jTable2.getValueAt(row, 7).toString());
        TxtMobileNo.setText(jTable2.getValueAt(row, 8).toString());
        CbStudent.setSelected(true);
        ChkMemActive.setSelected(false);

    }//GEN-LAST:event_jTable2MouseClicked

    private void BtnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnSaveMouseClicked
         String m_type = "";
        try {

            if (TxtName.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Enter member name.");
                return;
            }

            if (TxtAddress.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Enter address.");
                return;
            }
            if (TxtEmailID.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Enter email id.");
                return;
            }
            if (TxtMobileNo.getText().trim().length() == 0) {
                JOptionPane.showMessageDialog(null, "Enter mobile no.");
                return;
            }


            connection = Util.getConnection();

            if (TxtMemID.getText().trim().length() == 0) {

                rsmem.moveToInsertRow();

                rsmem.updateString("mem_name", TxtName.getText());
                rsmem.updateString("mem_address", TxtAddress.getText().trim());
                rsmem.updateString("mem_email_id", TxtEmailID.getText());
                rsmem.updateString("mem_mobile_no", TxtMobileNo.getText());
                if (CbStudent.isSelected() == true) {
                    rsmem.updateString("mem_type", CbStudent.getText());
                    m_type = CbStudent.getText();
                } else if (CbStaff.isSelected() == true) {
                    rsmem.updateString("mem_type", CbStaff.getText());
                    m_type = CbStaff.getText();
                } else {
                    rsmem.updateString("mem_type", TxtOtherType.getText());
                    m_type = TxtOtherType.getText();
                }

                if (ChkMemActive.isSelected() == true) {
                    rsmem.updateString("mem_active", "Y");
                } else {
                    rsmem.updateString("mem_active", "N");
                }

                rsmem.insertRow();

                rsmem.last();
                Display();

                PreparedStatement pstm = connection.prepareStatement("INSERT INTO memberrules(mem_type, mem_id) VALUES ('" + m_type + "'," + TxtMemID.getText() + ")");
                int a = pstm.executeUpdate();
                if (a > 0) {
                    System.out.println("member rule table updated successfully.");
                }
                
                if(jTable2.getSelectedRow() >= 0)
                {
                pstm = connection.prepareStatement("UPDATE student_details SET lib_member = 'Y' WHERE roll_number = '" +jTable2.getValueAt(jTable2.getSelectedRow(), 0)+ "'");
                int b = pstm.executeUpdate();
                if (b > 0) {
                    System.out.println("Student of NETGI is now member of library..");
                }
                }

            } else {
                rsmem.updateString("mem_name", TxtName.getText());
                rsmem.updateString("mem_address", TxtAddress.getText());
                rsmem.updateString("mem_email_id", TxtEmailID.getText());
                rsmem.updateString("mem_mobile_no", TxtMobileNo.getText());

                if (CbStudent.isSelected() == true) {
                    rsmem.updateString("mem_type", CbStudent.getText());
                    m_type = CbStudent.getText();
                } else if (CbStaff.isSelected() == true) {
                    rsmem.updateString("mem_type", CbStaff.getText());
                    m_type = CbStaff.getText();
                } else {
                    rsmem.updateString("mem_type", TxtOtherType.getText());
                    m_type = TxtOtherType.getText();
                }

                if (ChkMemActive.isSelected() == true) {
                    rsmem.updateString("mem_active", "Y");
                } else {
                    rsmem.updateString("mem_active", "N");
                }

                rsmem.updateRow();
                rsmem.refreshRow();

                PreparedStatement pstm = connection.prepareStatement("UPDATE memberrules set mem_type = '" + m_type + "' WHERE mem_id = " + TxtMemID.getText() + "");
                int a = pstm.executeUpdate();
                if (a > 0) {
                    System.out.println("member rule table updated successfully.");
                }
            }

            JOptionPane.showMessageDialog(null, "Record updated.");

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Unable to save record.");
            return;
        }
        CmdNewMouseClicked(null);
    }//GEN-LAST:event_BtnSaveMouseClicked

    private void BtnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEditMouseClicked
        // TODO add your handling code here:
         chadd = true;
        ClearText();
        TxtMemID.setEditable(true);
        try {
            rsmem.afterLast();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "No row available.");
            e.printStackTrace();
        }
    }//GEN-LAST:event_BtnEditMouseClicked

    private void CmdNewMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdNewMouseClicked
        // TODO add your handling code here:
       chadd = true;
        ClearText();
        TxtMemID.setEditable(false);
    }//GEN-LAST:event_CmdNewMouseClicked

    private void CmdLastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdLastMouseClicked
        // TODO add your handling code here:
        try {
            rsmem.last();
            Display();

        } catch (Exception e) {
            e.printStackTrace();
            //System.exit(1);
        }
    }//GEN-LAST:event_CmdLastMouseClicked

    private void CmdNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdNextMouseClicked
         try {
            if (rsmem.isLast()) {
                JOptionPane.showMessageDialog(null, "Already in last record.");
                return;

            }
            rsmem.next();
            Display();

        } catch (Exception e) {
            e.printStackTrace();

        }
    }//GEN-LAST:event_CmdNextMouseClicked

    private void CmdPreviousMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdPreviousMouseClicked
        try {
            if (rsmem.isFirst() == true) {
                JOptionPane.showMessageDialog(null, "Already in first record.");
                return;

            }

            rsmem.previous();
            Display();

        } catch (Exception e) {
            e.printStackTrace();

        }
    }//GEN-LAST:event_CmdPreviousMouseClicked

    private void CmdFirstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdFirstMouseClicked
        // TODO add your handling code here:
       try {
            rsmem.first();
            Display();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_CmdFirstMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnEdit;
    private javax.swing.JLabel BtnSave;
    private javax.swing.JCheckBox CbOther;
    private javax.swing.JCheckBox CbStaff;
    private javax.swing.JCheckBox CbStudent;
    private javax.swing.JCheckBox ChkMemActive;
    private javax.swing.JLabel CmdFirst;
    private javax.swing.JLabel CmdLast;
    private javax.swing.JLabel CmdNew;
    private javax.swing.JLabel CmdNext;
    private javax.swing.JLabel CmdPrevious;
    private javax.swing.JLabel LblPosition;
    private javax.swing.JFrame MemberStock;
    private javax.swing.JTextArea TxtAddress;
    private javax.swing.JTextField TxtEmailID;
    private javax.swing.JTextField TxtMemID;
    private javax.swing.JTextField TxtMobileNo;
    private javax.swing.JTextField TxtName;
    private javax.swing.JTextField TxtOtherType;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
