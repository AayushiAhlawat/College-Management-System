/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.Dufins.Developer.Applications.Library;

import Util.Util;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.MessageFormat;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NITISH SRIVASTAVA
 */
public class SearchMember extends javax.swing.JPanel implements Printable {

    /**
     * Creates new form SearchMember
     */
    Connection connection = null;
    int flag1 = 0;
    private int from = 0;
    private int rowcount;

    public SearchMember() {
        initComponents();
        TxtMemID.setText("");
        TxtName.setText("");
        TxtMobile.setText("");
        ChkAll.setSelected(true);

        jTable1.getColumnModel().getColumn(0).setHeaderValue("Member ID");
        jTable1.getColumnModel().getColumn(1).setHeaderValue("Name");
        jTable1.getColumnModel().getColumn(2).setHeaderValue("Address");
        jTable1.getColumnModel().getColumn(3).setHeaderValue("Email ID");
        jTable1.getColumnModel().getColumn(4).setHeaderValue("Mobile Number");
        jTable1.getColumnModel().getColumn(5).setHeaderValue("Active");
        jTable1.getColumnModel().getColumn(6).setHeaderValue("Member Type");
        jTable1.getTableHeader().resizeAndRepaint();

        // Removing Previous Data
        while (jTable1.getRowCount() > 0) {
            ((DefaultTableModel) jTable1.getModel()).removeRow(0);
        }

        try {
            connection = Util.getConnection();
            Cmb_MemberType.removeAllItems();
            Cmb_MemberType.addItem("All Members");

            Statement stmtcount = connection.createStatement();
            ResultSet rscount = stmtcount.executeQuery(" select count(mem_id) from membermaster ");
            while (rscount.next()) {
                rowcount = rscount.getInt(1);
            }

            Statement stm = connection.createStatement();
            ResultSet rstype = stm.executeQuery("Select Distinct mem_type from membermaster");
            while (rstype.next()) {
                Cmb_MemberType.addItem(rstype.getString(1));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        TxtMemID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        CmdPrint = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        TxtMobile = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtName = new javax.swing.JTextField();
        CmdSearch = new javax.swing.JLabel();
        Export2Excel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Cmb_MemberType = new javax.swing.JComboBox();
        ChkAll = new javax.swing.JRadioButton();
        ChkActivated = new javax.swing.JRadioButton();
        ChkNonActivated = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        IndexFirst = new javax.swing.JLabel();
        IndexPrvs = new javax.swing.JLabel();
        IndexNext = new javax.swing.JLabel();
        IndexLast = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTable1);
        jScrollPane1.getViewport().setBackground(Color.WHITE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        TxtMemID.setText("jTextField1");
        TxtMemID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtMemIDKeyReleased(evt);
            }
        });

        jLabel2.setText("Searh by Member ID:");

        CmdPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/print_icon.png"))); // NOI18N
        CmdPrint.setToolTipText("Print");
        CmdPrint.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdPrint.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdPrint.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdPrintMouseClicked(evt);
            }
        });

        jLabel4.setText("Mobile:");

        TxtMobile.setText("jTextField1");
        TxtMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtMobileKeyReleased(evt);
            }
        });

        jLabel3.setText("Name:");

        TxtName.setText("jTextField1");
        TxtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtNameKeyReleased(evt);
            }
        });

        CmdSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search-icon.png"))); // NOI18N
        CmdSearch.setToolTipText("Search");
        CmdSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdSearchMouseClicked(evt);
            }
        });

        Export2Excel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/table_excel.png"))); // NOI18N
        Export2Excel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        Export2Excel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Export2Excel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Export2ExcelMouseClicked(evt);
            }
        });

        jLabel1.setText("Member Type:");

        Cmb_MemberType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cmb_MemberTypeActionPerformed(evt);
            }
        });

        ChkAll.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(ChkAll);
        ChkAll.setText("All Member");
        ChkAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkAllActionPerformed(evt);
            }
        });

        ChkActivated.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(ChkActivated);
        ChkActivated.setText("Activated Member");
        ChkActivated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkActivatedActionPerformed(evt);
            }
        });

        ChkNonActivated.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(ChkNonActivated);
        ChkNonActivated.setText("Non-Activated Member");
        ChkNonActivated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkNonActivatedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ChkAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChkActivated)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ChkNonActivated))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TxtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TxtName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(TxtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Cmb_MemberType, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CmdSearch)
                        .addGap(18, 18, 18)
                        .addComponent(CmdPrint)
                        .addGap(18, 18, 18)
                        .addComponent(Export2Excel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Export2Excel)
                    .addComponent(CmdPrint)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(TxtMemID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(TxtMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(TxtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Cmb_MemberType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(CmdSearch))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChkAll)
                    .addComponent(ChkActivated)
                    .addComponent(ChkNonActivated))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nilaicon.png"))); // NOI18N

        IndexFirst.setBackground(new java.awt.Color(255, 255, 255));
        IndexFirst.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/First_1.png"))); // NOI18N
        IndexFirst.setToolTipText("First Index");
        IndexFirst.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        IndexFirst.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        IndexFirst.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IndexFirstMouseClicked(evt);
            }
        });

        IndexPrvs.setBackground(new java.awt.Color(255, 255, 255));
        IndexPrvs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/prev_1.png"))); // NOI18N
        IndexPrvs.setToolTipText("Previous Index");
        IndexPrvs.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        IndexPrvs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        IndexPrvs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IndexPrvsMouseClicked(evt);
            }
        });

        IndexNext.setBackground(new java.awt.Color(255, 255, 255));
        IndexNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/next_1.png"))); // NOI18N
        IndexNext.setToolTipText("Next Index");
        IndexNext.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        IndexNext.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        IndexNext.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IndexNextMouseClicked(evt);
            }
        });

        IndexLast.setBackground(new java.awt.Color(255, 255, 255));
        IndexLast.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/last_1.png"))); // NOI18N
        IndexLast.setToolTipText("Last Index");
        IndexLast.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        IndexLast.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        IndexLast.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IndexLastMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(IndexFirst)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IndexPrvs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IndexNext)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(IndexLast)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IndexFirst)
                    .addComponent(IndexPrvs)
                    .addComponent(IndexNext)
                    .addComponent(IndexLast))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TxtMemIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtMemIDKeyReleased
        // TODO add your handling code here:
        if (flag1 == 1 || TxtMemID.getText().length() > 0 || TxtName.getText().length() > 0 || TxtMobile.getText().length() > 0) {
            retMember();
        } else {
            clearTable();
        }
    }//GEN-LAST:event_TxtMemIDKeyReleased

    private void TxtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtNameKeyReleased
        // TODO add your handling code here:
        if (flag1 == 1 || TxtMemID.getText().length() > 0 || TxtName.getText().length() > 0 || TxtMobile.getText().length() > 0) {
            retMember();
        } else {
            clearTable();
        }
    }//GEN-LAST:event_TxtNameKeyReleased

    private void TxtMobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtMobileKeyReleased
        // TODO add your handling code here:
        if (flag1 == 1 || TxtMemID.getText().length() > 0 || TxtName.getText().length() > 0 || TxtMobile.getText().length() > 0) {
            retMember();
        } else {
            clearTable();
        }
    }//GEN-LAST:event_TxtMobileKeyReleased

    private void CmdSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdSearchMouseClicked
        // TODO add your handling code here:
        flag1 = 1;
        retMember();
        flag1 = 0;
    }//GEN-LAST:event_CmdSearchMouseClicked

    private void CmdPrintMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdPrintMouseClicked
        // TODO add your handling code here:
        if (jTable1.getRowCount() > 0) {

            try {
                PrinterJob job = PrinterJob.getPrinterJob();
                job.setPrintable(this);

                MessageFormat header = new MessageFormat("Report :- Members Detail");
                MessageFormat footer = new MessageFormat("Páge{0,number,integer}");
                try {
                    jTable1.print(JTable.PrintMode.FIT_WIDTH, header, footer);
                } catch (java.awt.print.PrinterException e) {

                    System.err.format("cant Print %s%n", e.getMessage());
                    e.printStackTrace();
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Table is empty");
        }
    }//GEN-LAST:event_CmdPrintMouseClicked

    private void Export2ExcelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Export2ExcelMouseClicked
        // TODO add your handling code here:
        int flag = 0;
        try {

            JFileChooser fc = new JFileChooser();
            String filename = "";

            int returnVal = fc.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                filename = (file.toString() + ".xls").replace('\\', '/');
            }

            connection = Util.getConnection();
            ResultSet rs;

            String StrQr = "";
            if (TxtMemID.getText().trim().length() > 0) {
                StrQr = StrQr + " and mem_id = " + TxtMemID.getText().trim() + " ";
                flag = 1;
            }
            if (TxtName.getText().trim().length() > 0) {
                StrQr = StrQr + " and mem_name like '%" + TxtName.getText().trim() + "%' ";
                flag = 1;
            }
            if (TxtMobile.getText().trim().length() > 0) {
                StrQr = StrQr + " and mem_mobile_no like '%" + TxtMobile.getText().trim() + "%' ";
                flag = 1;
            }
            if (Cmb_MemberType.getSelectedIndex() > 0) {
                StrQr = StrQr + " and mem_type = '" + Cmb_MemberType.getSelectedItem().toString().trim() + "' ";
                flag = 1;
            }

            if (flag == 1) {
                PreparedStatement stmt = connection.prepareStatement("select 'Member ID', 'Name', 'Address', 'Email ID', 'Mobile Number', 'Status', 'Member Type' union select mem_id, mem_name, replace(mem_address,'\n',' '), mem_email_id, mem_mobile_no, mem_active, mem_type INTO OUTFILE '" + filename + "' LINES TERMINATED BY '\n' from membermaster where 1=1 " + StrQr + "");
                rs = stmt.executeQuery();
            } else {
                PreparedStatement stmt = connection.prepareStatement("select 'Member ID', 'Name', 'Address', 'Email ID', 'Mobile Number', 'Status', 'Member Type' union select mem_id, mem_name, replace(mem_address,'\n',' '), mem_email_id, mem_mobile_no, mem_active, mem_type INTO OUTFILE '" + filename + "' LINES TERMINATED BY '\n' from membermaster");
                rs = stmt.executeQuery();
            }
            JOptionPane.showMessageDialog(this, "Data successfully exported to excel.");

        } catch (HeadlessException | SQLException e) {
            System.err.println(e);
            //System.exit(1);
        }
    }//GEN-LAST:event_Export2ExcelMouseClicked

    private void IndexFirstMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IndexFirstMouseClicked
        // TODO add your handling code here:
        from = 0;
        retMember();
    }//GEN-LAST:event_IndexFirstMouseClicked

    private void IndexPrvsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IndexPrvsMouseClicked
        // TODO add your handling code here:

        if (from <= 0) {
            from = 0;
            retMember();
        } else {
            from -= 50;
            retMember();
        }
    }//GEN-LAST:event_IndexPrvsMouseClicked

    private void IndexNextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IndexNextMouseClicked
        // TODO add your handling code here:

        if (from + 50 > rowcount) {
            retMember();
            from -= 50;
        } else if (from < 0) {
            from = 0;
            retMember();
        } else {
            from += 50;
            retMember();
        }
    }//GEN-LAST:event_IndexNextMouseClicked

    private void IndexLastMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IndexLastMouseClicked
        // TODO add your handling code here:

        if (rowcount != 0) {
            int rem = rowcount % 50;
            if (rem != 0) {
                from = rowcount / 50 * 50;
                retMember();
            } else {
                from = rowcount - 50;
                retMember();
            }

        }
    }//GEN-LAST:event_IndexLastMouseClicked

    private void Cmb_MemberTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cmb_MemberTypeActionPerformed
        // TODO add your handling code here:
        retMember();
    }//GEN-LAST:event_Cmb_MemberTypeActionPerformed

    private void ChkAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkAllActionPerformed
        // TODO add your handling code here:
        retMember();
    }//GEN-LAST:event_ChkAllActionPerformed

    private void ChkActivatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkActivatedActionPerformed
        // TODO add your handling code here:
        retMember();
    }//GEN-LAST:event_ChkActivatedActionPerformed

    private void ChkNonActivatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkNonActivatedActionPerformed
        // TODO add your handling code here:
        retMember();
    }//GEN-LAST:event_ChkNonActivatedActionPerformed

    public void clearTable() {
        while (jTable1.getRowCount() > 0) {
            ((DefaultTableModel) jTable1.getModel()).removeRow(0);
        }
    }

    public void retMember() {
        int flag = 0;
        try {


            connection = Util.getConnection();
            ResultSet rs;

            String StrQr = "";
            if (TxtMemID.getText().trim().length() > 0) {
                StrQr = StrQr + " and mem_id = " + TxtMemID.getText().trim() + " ";
                flag = 1;
            }
            if (TxtName.getText().trim().length() > 0) {
                StrQr = StrQr + " and mem_name like '%" + TxtName.getText().trim() + "%' ";
                flag = 1;
            }
            if (TxtMobile.getText().trim().length() > 0) {
                StrQr = StrQr + " and mem_mobile_no like '%" + TxtMobile.getText().trim() + "%' ";
                flag = 1;
            }
            if (Cmb_MemberType.getSelectedIndex() > 0) {
                StrQr = StrQr + " and mem_type = '" + Cmb_MemberType.getSelectedItem().toString() + "' ";
                flag = 1;
            }
            if (ChkActivated.isSelected()) {
                StrQr = StrQr + " and mem_active = 'Y' ";
                flag = 1;
            }
            if (ChkNonActivated.isSelected()) {
                StrQr = StrQr + " and mem_active = 'N' ";
                flag = 1;
            }


            if (flag == 1) {
                PreparedStatement stmt = connection.prepareStatement("select mem_id, mem_name, replace(mem_address,'\n',' '), mem_email_id, mem_mobile_no, mem_active, mem_type from membermaster where 1=1 " + StrQr + " order by mem_id limit " + from + ", 50");
                rs = stmt.executeQuery();
            } else {
                PreparedStatement stmt = connection.prepareStatement("select mem_id, mem_name, replace(mem_address,'\n',' '), mem_email_id, mem_mobile_no, mem_active, mem_type from membermaster order by mem_id limit " + from + ", 50");
                rs = stmt.executeQuery();
            }
            jTable1.getColumnModel().getColumn(0).setHeaderValue("Member ID");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Name");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Address");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Email ID");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("Mobile Number");
            jTable1.getColumnModel().getColumn(5).setHeaderValue("Active");
            jTable1.getColumnModel().getColumn(6).setHeaderValue("Member Type");
            jTable1.getTableHeader().resizeAndRepaint();

            // Removing Previous Data
            while (jTable1.getRowCount() > 0) {
                ((DefaultTableModel) jTable1.getModel()).removeRow(0);
            }

            //Creating Object []rowData for jTable's Table Model

            int columns = rs.getMetaData().getColumnCount();
            while (rs.next()) {
                Object[] row = new Object[columns];
                for (int i = 1; i <= columns; i++) {
                    row[i - 1] = rs.getObject(i); // 1
                }
                ((DefaultTableModel) jTable1.getModel()).insertRow(rs.getRow() - 1, row);
            }

        } catch (Exception e) {
            System.err.println(e);
            //System.exit(1);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ChkActivated;
    private javax.swing.JRadioButton ChkAll;
    private javax.swing.JRadioButton ChkNonActivated;
    private javax.swing.JComboBox Cmb_MemberType;
    private javax.swing.JLabel CmdPrint;
    private javax.swing.JLabel CmdSearch;
    private javax.swing.JLabel Export2Excel;
    private javax.swing.JLabel IndexFirst;
    private javax.swing.JLabel IndexLast;
    private javax.swing.JLabel IndexNext;
    private javax.swing.JLabel IndexPrvs;
    private javax.swing.JTextField TxtMemID;
    private javax.swing.JTextField TxtMobile;
    private javax.swing.JTextField TxtName;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    @Override
    public int print(Graphics graphics, PageFormat pageFormat, int pageIndex) throws PrinterException {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
