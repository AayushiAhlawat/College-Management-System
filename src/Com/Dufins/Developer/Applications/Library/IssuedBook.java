/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.Dufins.Developer.Applications.Library;

import Util.Util;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author NITISH SRIVASTAVA
 */
public class IssuedBook extends javax.swing.JPanel {

    /**
     * Creates new form IssuedBook
     */
    Connection connection = null;
    int count = 0;
    int countAdd = 0;

    public IssuedBook() {
        initComponents();
        ClearText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataTable = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        TxtBookID = new javax.swing.JTextField();
        TxtMemberName = new javax.swing.JTextField();
        TxtMemberID = new javax.swing.JTextField();
        TxtBookTitle = new javax.swing.JTextField();
        TxtMemberStatus = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        TxtBookStatus = new javax.swing.JTextField();
        BtnMemberDetails = new javax.swing.JLabel();
        BtnBookDetails = new javax.swing.JLabel();
        BtnAddBook = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        CmdClear = new javax.swing.JLabel();
        CmdIssue = new javax.swing.JLabel();

        dataTable.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dataTable.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                dataTableWindowClosing(evt);
            }
        });
        dataTable.getContentPane().setLayout(new javax.swing.BoxLayout(dataTable.getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        dataTable.getContentPane().add(jScrollPane2);

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel4.setText("Book ID :");

        jLabel2.setText("Name :");

        jLabel5.setText("Title :");

        TxtBookID.setText("jTextField1");

        TxtMemberName.setText("jTextField1");

        TxtMemberID.setText("jTextField1");

        TxtBookTitle.setText("jTextField1");

        TxtMemberStatus.setEditable(false);
        TxtMemberStatus.setText("jTextField1");

        jLabel3.setText("Member ID :");

        TxtBookStatus.setEditable(false);
        TxtBookStatus.setText("jTextField1");

        BtnMemberDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search-icon.png"))); // NOI18N
        BtnMemberDetails.setToolTipText("Search Detail");
        BtnMemberDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnMemberDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnMemberDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnMemberDetailsMouseClicked(evt);
            }
        });

        BtnBookDetails.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/search-icon.png"))); // NOI18N
        BtnBookDetails.setToolTipText("Search Detail");
        BtnBookDetails.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnBookDetails.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnBookDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnBookDetailsMouseClicked(evt);
            }
        });

        BtnAddBook.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/add.png"))); // NOI18N
        BtnAddBook.setToolTipText("Add Book to cart");
        BtnAddBook.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnAddBook.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnAddBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnAddBookMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(TxtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BtnMemberDetails))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(29, 29, 29)
                        .addComponent(TxtMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(TxtMemberStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TxtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(TxtBookStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BtnAddBook))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TxtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BtnBookDetails)))
                .addGap(21, 21, 21))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TxtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(BtnMemberDetails))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel3)))
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TxtMemberName, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel5)
                                .addComponent(TxtBookTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(jLabel2)))
                        .addGap(10, 10, 10)
                        .addComponent(TxtMemberStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(TxtBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4))
                            .addComponent(BtnBookDetails))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BtnAddBook, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TxtBookStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jScrollPane1.getViewport().setBackground(Color.WHITE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nilaicon.png"))); // NOI18N

        CmdClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/edit-clear-3.png"))); // NOI18N
        CmdClear.setToolTipText("Clear");
        CmdClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdClear.setPreferredSize(new java.awt.Dimension(36, 36));
        CmdClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdClearMouseClicked(evt);
            }
        });

        CmdIssue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/save_as.png"))); // NOI18N
        CmdIssue.setToolTipText("Issue Book");
        CmdIssue.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CmdIssue.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CmdIssue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CmdIssueMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(356, 356, 356)
                .addComponent(CmdIssue)
                .addGap(18, 18, 18)
                .addComponent(CmdClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(CmdIssue)
                    .addComponent(CmdClear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ClearText() {
        TxtMemberID.setText("");
        TxtMemberName.setText("");
        TxtMemberStatus.setText("");

        TxtBookID.setText("");
        TxtBookTitle.setText("");
        TxtBookStatus.setText("");

        BtnAddBook.setEnabled(false);
        BtnBookDetails.setEnabled(false);

        jTable1.getColumnModel().getColumn(0).setHeaderValue("Member ID");
        jTable1.getColumnModel().getColumn(1).setHeaderValue("Book ID");
        jTable1.getColumnModel().getColumn(2).setHeaderValue("Issue Date");
        jTable1.getColumnModel().getColumn(3).setHeaderValue("Recieved Date");
        jTable1.getColumnModel().getColumn(4).setHeaderValue("Status");

        while (jTable1.getRowCount() > 0) {
            ((DefaultTableModel) jTable1.getModel()).removeRow(0);
        }

    }

    public void getDataByName() {
        try {
            String str = "select book_id, title, author, isbnno from bookmaster where title like '%" + TxtBookTitle.getText().trim() + "%' and status = 'Available'";
            PreparedStatement pst = connection.prepareStatement(str);

            ResultSet rs = pst.executeQuery();
            jTable2.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs));
            jTable2.getColumnModel().getColumn(0).setHeaderValue("Book ID");
            jTable2.getColumnModel().getColumn(1).setHeaderValue("Book Title");
            jTable2.getColumnModel().getColumn(2).setHeaderValue("Author");
            jTable2.getColumnModel().getColumn(3).setHeaderValue("ISBN NO.");
            jTable2.getTableHeader().resizeAndRepaint();
            dataTable.setVisible(true);
            dataTable.setBounds(600, 250, 600, 300);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void dataTableWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dataTableWindowClosing
        // TODO add your handling code here:
        int row = jTable2.getSelectedRow();
        if (jTable2.getRowCount() > 0) {
            String Bookid = jTable2.getValueAt(row, 0).toString();
            try {
                Statement stmt2 = connection.createStatement();
                ResultSet rs = stmt2.executeQuery("select * from bookmaster where book_id = '" + Bookid + "'");
                if (rs.next()) {
                    TxtBookID.setText(rs.getString("book_id"));
                    TxtBookTitle.setText(rs.getString("title"));
                    TxtBookStatus.setText("Book available.");
                    BtnAddBook.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(this, "Data does not available.");
                    ClearText();
                }
                stmt2.close();
            } catch (Exception e) {
                dataTable.setVisible(false);
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Data not available");
        }
    }//GEN-LAST:event_dataTableWindowClosing

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        String sql = "";
        int row = jTable1.getSelectedRow();
        try {

            connection = Util.getConnection();

            if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_DELETE) {
                PreparedStatement psmnt = connection.prepareStatement("delete from transaction_cart where trn_mem_id = ? and trn_book_id = ? and status = 'Issuing'");
                psmnt.setString(1, jTable1.getValueAt(row, 0).toString());
                psmnt.setString(2, jTable1.getValueAt(row, 1).toString());
                String bookid = jTable1.getValueAt(row, 1).toString();
                int a = psmnt.executeUpdate();
                if (a > 0) {
                    JOptionPane.showMessageDialog(null, "Successfully deleted");
                    sql = "update  bookmaster set status='Available' where book_id=" + bookid;
                    psmnt = connection.prepareStatement(sql);
                    psmnt.executeUpdate(sql);
                } else {
                    JOptionPane.showMessageDialog(this, "Issued book you can't delete.");
                }

                while (jTable1.getRowCount() > 0) {
                    ((DefaultTableModel) jTable1.getModel()).removeRow(0);
                }
                sql = "select trn_mem_id, trn_book_id, trn_issue_dt, trn_receive_dt, status from transaction_cart where trn_mem_id =? and (trn_receive_dt is null  or trn_receive_dt='')";
                psmnt = connection.prepareStatement(sql);
                psmnt.setString(1, TxtMemberID.getText());

                ResultSet rs1 = psmnt.executeQuery();
                jTable1.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs1));

                jTable1.getColumnModel().getColumn(0).setHeaderValue("Member ID");
                jTable1.getColumnModel().getColumn(1).setHeaderValue("Book ID");
                jTable1.getColumnModel().getColumn(2).setHeaderValue("Issue Date");
                jTable1.getColumnModel().getColumn(3).setHeaderValue("Recieved Date");
                jTable1.getColumnModel().getColumn(4).setHeaderValue("Status");
            } else {
                JOptionPane.showMessageDialog(null, "Data not deleted.");
            }

            BtnMemberDetailsMouseClicked(null);

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTable1KeyPressed

    public void countIssuedBook() {
        String str = "";
        int maxBook = 0;
        try {
            str = "select count(trn_id) from transaction_cart where trn_mem_id =? and (trn_receive_dt is null  or trn_receive_dt='')";
            PreparedStatement pst1 = connection.prepareStatement(str);
            pst1.setString(1, TxtMemberID.getText());
            ResultSet rs1 = pst1.executeQuery();
            if (rs1.next()) {
                count = rs1.getInt(1);
            }

            pst1 = connection.prepareStatement("SELECT max_book FROM memberrules where mem_id = ?");
            pst1.setInt(1, Integer.parseInt(TxtMemberID.getText()));
            rs1 = pst1.executeQuery();
            rs1.next();
            if (rs1.getInt(1) > 0) {
                System.out.println("max book " + rs1.getInt(1));
                maxBook = rs1.getInt(1);
            } else {
                JOptionPane.showMessageDialog(this, "No book availbale for this member\nplease check the book available for this member is not 0.");
                return;
            }

            System.out.println("max booook" + maxBook);
            if (count < maxBook) {
                TxtMemberStatus.setText((maxBook - count) + " book to issue.");
                BtnBookDetails.setEnabled(true);
            } else {
                TxtMemberStatus.setText("Book already issued.");
                BtnAddBook.setEnabled(false);
                BtnBookDetails.setEnabled(false);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void BtnMemberDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnMemberDetailsMouseClicked
        // TODO add your handling code here:
        //get member deatils
        try {
            //get database connection details
            Date dChk = null;
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date today = new Date();


            connection = Util.getConnection();
            String str = "SELECT mem_expirydate FROM memberrules WHERE mem_id = " + TxtMemberID.getText() + "";
            PreparedStatement pst = connection.prepareStatement(str);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                dChk = rs.getDate(1);
                System.out.println(" date " + dChk + " today " + df.format(today));
            } else {
                dChk = new Date();
                System.out.println(" date " + dChk + " today " + df.format(today));
            }
            if (dChk.toString().equals(df.format(today)) || dChk.before(new Date())) {
                JOptionPane.showMessageDialog(this, "Membership is expired on " + dChk + ".");
                return;
            }
            str = "select * from membermaster where mem_id =?";
            pst = connection.prepareStatement(str);
            pst.setString(1, TxtMemberID.getText());


            rs = pst.executeQuery();
            if (rs.next()) {
                TxtMemberName.setText(rs.getString("mem_name"));


                while (jTable1.getRowCount() > 0) {
                    ((DefaultTableModel) jTable1.getModel()).removeRow(0);
                }

                str = "select trn_mem_id, trn_book_id, trn_issue_dt, trn_receive_dt, status from transaction_cart where trn_mem_id =? and (trn_receive_dt is null  or trn_receive_dt='')";
                PreparedStatement pst1 = connection.prepareStatement(str);
                pst1.setString(1, TxtMemberID.getText());
                ResultSet rs1 = pst1.executeQuery();
                jTable1.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs1));

                jTable1.getColumnModel().getColumn(0).setHeaderValue("Member ID");
                jTable1.getColumnModel().getColumn(1).setHeaderValue("Book ID");
                jTable1.getColumnModel().getColumn(2).setHeaderValue("Issue Date");
                jTable1.getColumnModel().getColumn(3).setHeaderValue("Recieved Date");
                jTable1.getColumnModel().getColumn(4).setHeaderValue("Status");

                countIssuedBook();

            } else {
                JOptionPane.showMessageDialog(null, "Invalid member id.");
                ClearText();
                return;
            }

        } catch (SQLException | HeadlessException | NumberFormatException | NullPointerException e) {
            JOptionPane.showMessageDialog(this, "No membership activated for this ID\nError :" + e);
            e.printStackTrace();
        }

    }//GEN-LAST:event_BtnMemberDetailsMouseClicked

    private void BtnBookDetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnBookDetailsMouseClicked
        // TODO add your handling code here:
        //get member deatils
        try {
            //get database connection details

            connection = Util.getConnection();
            String str = "";

            if (TxtBookID.getText().isEmpty() == false) {
                str = "select * from bookmaster where book_id =?";
                PreparedStatement pst = connection.prepareStatement(str);
                pst.setString(1, TxtBookID.getText());

                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    TxtBookTitle.setText(rs.getString("title"));
                    if (rs.getString("status").equalsIgnoreCase("Available")) {
                        TxtBookStatus.setText("Book available.");
                        BtnAddBook.setEnabled(true);
                    } else {
                        TxtBookStatus.setText("Book not available.");
                        BtnAddBook.setEnabled(false);
                        JOptionPane.showMessageDialog(this, "Search book by name.");
                        TxtBookID.setText("");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Invalid book id.");
                    TxtBookID.setText("");
                    TxtBookTitle.setText("");
                    TxtBookStatus.setText("");
                    BtnAddBook.setEnabled(false);
                    return;
                }
            } else {
                getDataByName();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_BtnBookDetailsMouseClicked

    private void BtnAddBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnAddBookMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        if (TxtMemberID.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "Please enter member_id.");
            return;
        }
        try {
            connection = Util.getConnection();
            PreparedStatement pstmt = connection.prepareStatement("Insert into transaction_cart(trn_mem_id, trn_book_id, trn_issue_dt) values(?,?,sysdate())");
            pstmt.setString(1, TxtMemberID.getText());
            pstmt.setString(2, TxtBookID.getText());
            pstmt.executeUpdate();

            String sql = "update  bookmaster set status='Issuing' , mem_id=" + TxtMemberID.getText() + " where book_id=" + TxtBookID.getText();
            pstmt = connection.prepareStatement(sql);
            pstmt.executeUpdate(sql);

            sql = "select trn_mem_id, trn_book_id, trn_issue_dt, trn_receive_dt, status from transaction_cart where trn_mem_id =? and (trn_receive_dt is null  or trn_receive_dt='')";
            pstmt = connection.prepareStatement(sql);
            pstmt.setString(1, TxtMemberID.getText());

            ResultSet rs1 = pstmt.executeQuery();
            jTable1.setModel(net.proteanit.sql.DbUtils.resultSetToTableModel(rs1));

            jTable1.getColumnModel().getColumn(0).setHeaderValue("Member ID");
            jTable1.getColumnModel().getColumn(1).setHeaderValue("Book ID");
            jTable1.getColumnModel().getColumn(2).setHeaderValue("Issue Date");
            jTable1.getColumnModel().getColumn(3).setHeaderValue("Recieved Date");
            jTable1.getColumnModel().getColumn(4).setHeaderValue("Status");

            countIssuedBook();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Book already available in the cart.");
            e.printStackTrace();
        }

    }//GEN-LAST:event_BtnAddBookMouseClicked

    private void CmdClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdClearMouseClicked
        // TODO add your handling code here:
        ClearText();
    }//GEN-LAST:event_CmdClearMouseClicked

    private void CmdIssueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CmdIssueMouseClicked
        // TODO add your handling code here:
        //issue book
        try {
            connection = Util.getConnection();
            connection.setAutoCommit(false);

            String sql = "insert into transaction (trn_mem_id,trn_book_id,trn_issue_dt) select trn_mem_id, trn_book_id, trn_issue_dt from transaction_cart where trn_mem_id = " + TxtMemberID.getText() + " and status='Issuing'";
            PreparedStatement pst = connection.prepareStatement(sql);
            pst.executeUpdate(sql);

            sql = "update  bookmaster set status='Issued' where status='Issuing' and mem_id=" + TxtMemberID.getText() + "";
            pst = connection.prepareStatement(sql);
            int chk = pst.executeUpdate(sql);
            if (chk <= 0) {
                JOptionPane.showMessageDialog(this, "Please check transaction.");
                return;
            }

            sql = "update  transaction_cart set status='Issued' where trn_mem_id=" + TxtMemberID.getText() + " and status ='Issuing'";
            pst = connection.prepareStatement(sql);
            pst.executeUpdate(sql);

            connection.commit();

            JOptionPane.showMessageDialog(null, "Book Issued");

            while (jTable1.getRowCount() > 0) {
                ((DefaultTableModel) jTable1.getModel()).removeRow(0);
            }
            ClearText();
            count = 0;

        } catch (Exception e) {
            e.printStackTrace();
            System.exit(1);
        }
    }//GEN-LAST:event_CmdIssueMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnAddBook;
    private javax.swing.JLabel BtnBookDetails;
    private javax.swing.JLabel BtnMemberDetails;
    private javax.swing.JLabel CmdClear;
    private javax.swing.JLabel CmdIssue;
    private javax.swing.JTextField TxtBookID;
    private javax.swing.JTextField TxtBookStatus;
    private javax.swing.JTextField TxtBookTitle;
    private javax.swing.JTextField TxtMemberID;
    private javax.swing.JTextField TxtMemberName;
    private javax.swing.JTextField TxtMemberStatus;
    private javax.swing.JFrame dataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
