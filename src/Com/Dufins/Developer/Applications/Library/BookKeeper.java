/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.Dufins.Developer.Applications.Library;

import Com.Dufins.Developer.LoginPkg.Login;
import Util.Util;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;

/**
 *
 * @author Owner
 */
public class BookKeeper extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    BookMaster addBook = null;
    SearchBook bookList = null;
    ActivateMember active = null;
    MemberMaster addMember = null;
    IssuedBook issuedBook = null;
    Account manageFine = null;
    Report report = null;
    ReturnBook returnBook = null;
    SearchMember memberList = null;

    public BookKeeper() {
        initComponents();
        validateMember();
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                setExtendedState(MAXIMIZED_BOTH);
            }
        });
        Image im = null;
        try {
            im = ImageIO.read(getClass().getResource("/Image/icon_2.png"));
        } catch (IOException ex) {
        }
        setIconImage(im);
        ImageIcon leafIcon = createImageIcon("/Image/minus.png");
        if (leafIcon != null) {
            DefaultTreeCellRenderer renderer =
                    new DefaultTreeCellRenderer();
            renderer.setLeafIcon(leafIcon);
            renderer.setOpenIcon(leafIcon);
            renderer.setClosedIcon(null);

            jtree_Menu.setCellRenderer(renderer);
        }
        getUser();

    }

    protected static ImageIcon createImageIcon(String path) {
        java.net.URL imgURL = BookKeeper.class.getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }

    private void validateMember() {
        try {
            try (Connection connection = Util.getConnection()) {
                Statement stm = connection.createStatement();
                ResultSet rs = stm.executeQuery("select mem_id from memberrules where mem_expirydate < sysdate() ");
                while (rs.next()) {
                    Statement stm1 = connection.createStatement();
                    stm1.executeUpdate("update membermaster set mem_active = 'N' where mem_id = " + rs.getInt(1) + " and mem_active = 'Y'");

                }
                rs.close();
                stm.close();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtree_Menu = new javax.swing.JTree();
        imagePanel1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenu10 = new javax.swing.JMenu();
        jMenu11 = new javax.swing.JMenu();
        jMenu13 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("(Book Keeper) cmsDufins Version 1.0");
        setBackground(new java.awt.Color(231, 243, 243));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        jScrollPane2.setBorder(null);
        jScrollPane2.setOpaque(false);

        jtree_Menu.setBorder(javax.swing.BorderFactory.createBevelBorder(1, null, new java.awt.Color(255, 51, 0), null, new java.awt.Color(51, 255, 255)));
        jtree_Menu.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Book Keeper");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Book Stock");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Add Book");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Search Book");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Issue Book");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Issued Book");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Return Book");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Manage Fine");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Report");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Member");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Add Member");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Membership Activation");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Member List");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jtree_Menu.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jtree_Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtree_MenuMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtree_MenuMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtree_Menu);
        //ImageIcon greenIcon = new ImageIcon("d://r.png" );
        //DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) jTree1.getCellRenderer();
        DefaultTreeCellRenderer renderer2 = new DefaultTreeCellRenderer();
        Color ppColor5 = new Color(255,255, 255);
        renderer2.setBackgroundNonSelectionColor(ppColor5);//ClosedIcon(greenIcon);
        renderer2.setBackgroundNonSelectionColor(ppColor5);//ClosedIcon(greenIcon);
        renderer2.setTextSelectionColor(Color.BLACK);
        jtree_Menu.setCellRenderer(renderer2);

        imagePanel1.setBackground(new java.awt.Color(255, 255, 255));

        jMenu3.setText("USER ID:");
        jMenuBar1.add(jMenu3);

        jMenu5.setText("jMenu5");
        jMenuBar1.add(jMenu5);

        jMenu6.setText("|");
        jMenuBar1.add(jMenu6);

        jMenu7.setText("Login Time :");
        jMenuBar1.add(jMenu7);

        jMenu8.setText("jMenu8");
        jMenuBar1.add(jMenu8);

        jMenu9.setText("|");
        jMenuBar1.add(jMenu9);

        jMenu10.setText("Date :");
        jMenuBar1.add(jMenu10);

        jMenu11.setText("jMenu11");
        jMenu11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu11ActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenu11);

        jMenu13.setText("|");
        jMenuBar1.add(jMenu13);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(imagePanel1)
        );

        Color ppColor1 = new Color(231,243,243);
        jScrollPane2.getViewport().setBackground(ppColor1);
        jScrollPane2.getVerticalScrollBar().setBackground(Color.RED);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    }//GEN-LAST:event_formWindowOpened

    private void imagePanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagePanel1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_imagePanel1MouseEntered

    private void jtree_MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtree_MenuMouseClicked
        // TODO add your handling code here:
        TreePath selectionPath = jtree_Menu.getSelectionPath();
        String selected = selectionPath.getLastPathComponent().toString();
        int width_Imagepanel = imagePanel1.getWidth();
        int height_Imagepanel = imagePanel1.getHeight();

        switch (selected) {
            case "Add Book":
                addBook = new BookMaster();
                imagePanel1.removeAll();
                addBook.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(addBook);
                addBook.setVisible(true);
                this.repaint();
                break;

            case "Search Book":
                bookList = new SearchBook();
                imagePanel1.removeAll();
                bookList.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(bookList);
                bookList.setVisible(true);
                this.repaint();
                break;

            case "Issued Book":
                issuedBook = new IssuedBook();
                imagePanel1.removeAll();
                issuedBook.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(issuedBook);
                issuedBook.setVisible(true);
                this.repaint();
                break;

            case "Return Book":
                returnBook = new ReturnBook();
                imagePanel1.removeAll();
                returnBook.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(returnBook);
                returnBook.setVisible(true);
                this.repaint();
                break;

            case "Manage Fine":
                manageFine = new Account();
                imagePanel1.removeAll();
                manageFine.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(manageFine);
                manageFine.setVisible(true);
                this.repaint();
                break;

            case "Report":
                report = new Report();
                imagePanel1.removeAll();
                report.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(report);
                report.setVisible(true);
                this.repaint();
                break;


            case "Membership Activation":
                active = new ActivateMember();
                imagePanel1.removeAll();
                active.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(active);
                active.setVisible(true);
                this.repaint();
                break;

            case "Add Member":
                addMember = new MemberMaster();
                imagePanel1.removeAll();
                addMember.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(addMember);
                addMember.setVisible(true);
                this.repaint();
                break;

            case "Member List":
                memberList = new SearchMember();
                imagePanel1.removeAll();
                memberList.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                imagePanel1.add(memberList);
                memberList.setVisible(true);
                this.repaint();
                break;
        }


    }//GEN-LAST:event_jtree_MenuMouseClicked

    private void jtree_MenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtree_MenuMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtree_MenuMousePressed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        Login l = new Login();
        l.setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_formPropertyChange

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowStateChanged

    private void jMenu11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu11ActionPerformed
    
    }//GEN-LAST:event_jMenu11ActionPerformed

    private void getUser() {
        try {
            try (Connection connection = Util.getConnection(); 
                    Statement stm = connection.createStatement(); 
                    ResultSet rs = stm.executeQuery("select username from login where active = 'Y' ")) {
                if (rs.next()) {
                    jMenu5.setText(rs.getString(1).toUpperCase());
                } else {
                    jMenu5.setText("Guest".toUpperCase());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookKeeper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookKeeper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookKeeper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookKeeper.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new BookKeeper().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane imagePanel1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu13;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTree jtree_Menu;
    // End of variables declaration//GEN-END:variables
}
