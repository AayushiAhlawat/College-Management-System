/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.Dufins.Developer.HRManagement.Forms;

import Util.Util;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author Owner
 */
public class Payrollfrequency extends javax.swing.JPanel {

    /**
     * Creates new form Payrollfrequency
     */
    int count = 0;
    Connection connection = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    public Payrollfrequency() {
        initComponents();
        txtWeekly.setEditable(false);
        try {
            connection = Util.getConnection();
            //retPayroll();
            //retPayslip();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void retPayroll() {
        try {
            pstmt = connection.prepareStatement("select * from payroll_frequencies");
            rs = pstmt.executeQuery();
            while (rs.next()) {
                if (rs.getString(1).equalsIgnoreCase("Weekly")) {
                    txtWeekly.setText(rs.getString(2));
                }
                if (rs.getString(1).equalsIgnoreCase("Semi-Monthly")) {
                    txtSemiMonth.setText(rs.getString(2));
                }
                if (rs.getString(1).equalsIgnoreCase("Monthly")) {
                    dcStartMonth.setDate(rs.getDate(2));
                    dcEndMonth.setDate(rs.getDate(3));
                }
                if (rs.getString(1).equalsIgnoreCase("Quarterly")) {
                    dcPPQ1.setDate(rs.getDate(2));
                    dcPPQ2.setDate(rs.getDate(3));
                    dcPPQ3.setDate(rs.getDate(4));
                    dcPPQ4.setDate(rs.getDate(5));
                }
                if (rs.getString(1).equalsIgnoreCase("Semi-Annualy")) {
                    dcPPSa1.setDate(rs.getDate(2));
                    dcPPSa2.setDate(rs.getDate(3));
                }
                if (rs.getString(1).equalsIgnoreCase("Annualy")) {
                    dcAnually.setDate(rs.getDate(2));
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void retPayslip()
    {
        try {
            pstmt = connection.prepareStatement("select * from payslip_setting");
            rs = pstmt.executeQuery();
            if (rs.next()) {
              txtPaySlip.setText(rs.getString(2));
            }
        } catch (Exception e) {
            e.printStackTrace();
        } 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ChkAll = new javax.swing.JCheckBox();
        ChkWeekly = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        txtWeekly = new javax.swing.JTextField();
        ChkSemiMonthly = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtSemiMonth = new javax.swing.JTextField();
        ChkMonthly = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        dcStartMonth = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        dcEndMonth = new com.toedter.calendar.JDateChooser();
        ChkQuar = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        dcPPQ1 = new com.toedter.calendar.JDateChooser();
        dcPPQ2 = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dcPPQ3 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        dcPPQ4 = new com.toedter.calendar.JDateChooser();
        ChkSemiAnual = new javax.swing.JCheckBox();
        dcPPSa1 = new com.toedter.calendar.JDateChooser();
        dcPPSa2 = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Chkdaily = new javax.swing.JCheckBox();
        jLabel11 = new javax.swing.JLabel();
        txtDaily = new javax.swing.JTextField();
        ChkAnual = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        dcAnually = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        txtPaySlip = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        BtnApply = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payroll Frequencies", 2, 3, new java.awt.Font("Arial", 1, 18), new java.awt.Color(0, 0, 51))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pay Period", 0, 3, new java.awt.Font("Arial", 1, 14), new java.awt.Color(0, 0, 51))); // NOI18N

        ChkAll.setBackground(new java.awt.Color(255, 255, 255));
        ChkAll.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ChkAll.setText("Select All");
        ChkAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkAllActionPerformed(evt);
            }
        });

        ChkWeekly.setBackground(new java.awt.Color(255, 255, 255));
        ChkWeekly.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ChkWeekly.setText("Weekly");
        ChkWeekly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkWeeklyActionPerformed(evt);
            }
        });
        ChkWeekly.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ChkWeeklyPropertyChange(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Pay Period :");

        txtWeekly.setEditable(false);
        txtWeekly.setText(" 7");

        ChkSemiMonthly.setBackground(new java.awt.Color(255, 255, 255));
        ChkSemiMonthly.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ChkSemiMonthly.setText("Semi - Monthly");
        ChkSemiMonthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkSemiMonthlyActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Pay Period :");

        txtSemiMonth.setEditable(false);
        txtSemiMonth.setText("15");

        ChkMonthly.setBackground(new java.awt.Color(255, 255, 255));
        ChkMonthly.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ChkMonthly.setText("Monthly");
        ChkMonthly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkMonthlyActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Pay Period Start Date :");

        dcStartMonth.setBackground(new java.awt.Color(255, 255, 255));
        dcStartMonth.setDate(new Date());
        dcStartMonth.setDateFormatString("dd-MM-yyyy");
        dcStartMonth.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcStartMonthPropertyChange(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Pay Period End Date :");

        dcEndMonth.setBackground(new java.awt.Color(255, 255, 255));
        dcEndMonth.setDate(new Date());
        dcEndMonth.setDateFormatString("dd-MM-yyyy");

        ChkQuar.setBackground(new java.awt.Color(255, 255, 255));
        ChkQuar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ChkQuar.setText("Quarterly");
        ChkQuar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkQuarActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("1 st - Pay Period  :");

        dcPPQ1.setBackground(new java.awt.Color(255, 255, 255));
        dcPPQ1.setDate(new Date());
        dcPPQ1.setDateFormatString("dd-MM-yyyy");
        dcPPQ1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcPPQ1PropertyChange(evt);
            }
        });

        dcPPQ2.setBackground(new java.awt.Color(255, 255, 255));
        dcPPQ2.setDate(new Date());
        dcPPQ2.setDateFormatString("dd-MM-yyyy");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("2 nd - Pay Period  :");

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("3 rd - Pay Period  :");

        dcPPQ3.setBackground(new java.awt.Color(255, 255, 255));
        dcPPQ3.setDate(new Date());
        dcPPQ3.setDateFormatString("dd-MM-yyyy");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel8.setText("4 th - Pay Period  :");

        dcPPQ4.setBackground(new java.awt.Color(255, 255, 255));
        dcPPQ4.setDate(new Date());
        dcPPQ4.setDateFormatString("dd-MM-yyyy");

        ChkSemiAnual.setBackground(new java.awt.Color(255, 255, 255));
        ChkSemiAnual.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ChkSemiAnual.setText("Semi - Annualy");
        ChkSemiAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkSemiAnualActionPerformed(evt);
            }
        });

        dcPPSa1.setBackground(new java.awt.Color(255, 255, 255));
        dcPPSa1.setDate(new Date());
        dcPPSa1.setDateFormatString("dd-MM-yyyy");
        dcPPSa1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dcPPSa1PropertyChange(evt);
            }
        });

        dcPPSa2.setBackground(new java.awt.Color(255, 255, 255));
        dcPPSa2.setDate(new Date());
        dcPPSa2.setDateFormatString("dd-MM-yyyy");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel9.setText("1 st - Pay Period  :");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel10.setText("2 nd - Pay Period  :");

        Chkdaily.setBackground(new java.awt.Color(255, 255, 255));
        Chkdaily.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Chkdaily.setText("Daily");
        Chkdaily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkdailyActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel11.setText("Pay Period :");

        txtDaily.setEditable(false);
        txtDaily.setText("Pay for each working Day");

        ChkAnual.setBackground(new java.awt.Color(255, 255, 255));
        ChkAnual.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ChkAnual.setText("Annualy");
        ChkAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkAnualActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel12.setText("Pay Period :");

        dcAnually.setBackground(new java.awt.Color(255, 255, 255));
        dcAnually.setDate(new Date());
        dcAnually.setDateFormatString("dd-MM-yyyy");

        jLabel13.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel13.setText("Payslip  Number Starts from :");

        jLabel15.setText(":In Days");

        jLabel17.setText(":In Days");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(465, 465, 465))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ChkMonthly)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(156, 156, 156)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtSemiMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel17))
                                            .addComponent(dcStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(txtWeekly, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel15))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ChkQuar)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dcPPQ3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dcPPQ1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(33, 33, 33)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(dcPPQ2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dcEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ChkSemiAnual)
                                            .addComponent(ChkAnual))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(32, 32, 32))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(102, 102, 102)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPaySlip, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtDaily, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(dcPPSa1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dcAnually, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8)
                                                .addGap(26, 26, 26)
                                                .addComponent(dcPPQ4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(dcPPSa2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ChkAll)
                                    .addComponent(ChkWeekly)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(ChkSemiMonthly)
                                        .addGap(51, 51, 51)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Chkdaily)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(144, 144, 144)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(ChkAll)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ChkWeekly)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtWeekly, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ChkSemiMonthly)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSemiMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(ChkMonthly)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(dcStartMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dcEndMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ChkQuar))
                            .addComponent(dcPPQ2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcPPQ1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dcPPQ4, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dcPPQ3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ChkSemiAnual)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dcPPSa1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dcPPSa2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ChkAnual)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dcAnually, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Chkdaily)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDaily, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPaySlip, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nilaicon.png"))); // NOI18N

        BtnApply.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/save_as.png"))); // NOI18N
        BtnApply.setToolTipText("Apply Payroll Settings");
        BtnApply.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        BtnApply.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnApply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnApplyMouseClicked(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Crystal_button_cancel.png"))); // NOI18N
        jLabel16.setToolTipText("Apply Payroll Settings");
        jLabel16.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BtnApply)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnApply)
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ChkAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkAllActionPerformed
        // TODO add your handling code here:
        if (ChkAll.isSelected()) {
            ChkAnual.setSelected(true);
            ChkMonthly.setSelected(true);
            ChkQuar.setSelected(true);
            ChkSemiAnual.setSelected(true);
            ChkSemiMonthly.setSelected(true);
            ChkWeekly.setSelected(true);
            Chkdaily.setSelected(true);
            count = 7;
        } else {
            ChkAnual.setSelected(false);
            ChkMonthly.setSelected(false);
            ChkQuar.setSelected(false);
            ChkSemiAnual.setSelected(false);
            ChkSemiMonthly.setSelected(false);
            ChkWeekly.setSelected(false);
            Chkdaily.setSelected(false);
            count = 0;
        }
    }//GEN-LAST:event_ChkAllActionPerformed

    private void ChkWeeklyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkWeeklyActionPerformed
        // TODO add your handling code here:
        if (ChkWeekly.isSelected()) {
            count++;
            txtWeekly.setEditable(true);
        } else {
            ChkAll.setSelected(false);
            txtWeekly.setEditable(false);
            count--;
        }
        if (count == 7) {
            ChkAll.setSelected(true);
        }
    }//GEN-LAST:event_ChkWeeklyActionPerformed

    private void ChkSemiMonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkSemiMonthlyActionPerformed
        // TODO add your handling code here:
        if (ChkSemiMonthly.isSelected()) {
            txtSemiMonth.setEditable(true);
            count++;
        } else {
            ChkAll.setSelected(false);
            txtSemiMonth.setEditable(false);
            count--;
        }
        if (count == 7) {
            ChkAll.setSelected(true);
        }
    }//GEN-LAST:event_ChkSemiMonthlyActionPerformed

    private void ChkMonthlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkMonthlyActionPerformed
        // TODO add your handling code here:
        if (ChkMonthly.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 7) {
            ChkAll.setSelected(true);
        }
    }//GEN-LAST:event_ChkMonthlyActionPerformed

    private void ChkQuarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkQuarActionPerformed
        // TODO add your handling code here:
        if (ChkQuar.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 7) {
            ChkAll.setSelected(true);
        }
    }//GEN-LAST:event_ChkQuarActionPerformed

    private void ChkSemiAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkSemiAnualActionPerformed
        // TODO add your handling code here:
        if (ChkSemiAnual.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 7) {
            ChkAll.setSelected(true);
        }
    }//GEN-LAST:event_ChkSemiAnualActionPerformed

    private void ChkAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkAnualActionPerformed
        // TODO add your handling code here:
        if (ChkAnual.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 7) {
            ChkAll.setSelected(true);
        }
    }//GEN-LAST:event_ChkAnualActionPerformed

    private void ChkdailyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkdailyActionPerformed
        // TODO add your handling code here:
        if (Chkdaily.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 7) {
            ChkAll.setSelected(true);
        }
    }//GEN-LAST:event_ChkdailyActionPerformed

    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jLabel16MouseClicked

    private void BtnApplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnApplyMouseClicked
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        try {
            connection.setAutoCommit(false);
            pstmt = connection.prepareStatement("update payroll_Frequencies set period_time_1 = ?, period_time_2 = ?, period_time_3 = ?, period_time_4 = ? where pay_period = ?");
            if (ChkWeekly.isSelected()) {
                pstmt.setString(1, txtWeekly.getText().trim());
                pstmt.setString(2, "0");
                pstmt.setString(3, "0");
                pstmt.setString(4, "0");
                pstmt.setString(5, "Weekly");
                pstmt.addBatch();
            }
            if (ChkSemiMonthly.isSelected()) {
                pstmt.setString(1, txtSemiMonth.getText().trim());
                pstmt.setString(2, "0");
                pstmt.setString(3, "0");
                pstmt.setString(4, "0");
                pstmt.setString(5, "Semi-Monthly");
                pstmt.addBatch();
            }
            if (ChkMonthly.isSelected()) {
                pstmt.setString(1, sdf.format(dcStartMonth.getDate()));
                pstmt.setString(2, sdf.format(dcEndMonth.getDate()));
                pstmt.setString(3, "0");
                pstmt.setString(4, "0");
                pstmt.setString(5, "Monthly");
                pstmt.addBatch();
            }
            if (ChkQuar.isSelected()) {
                pstmt.setString(1, sdf.format(dcPPQ1.getDate()));
                pstmt.setString(2, sdf.format(dcPPQ2.getDate()));
                pstmt.setString(3, sdf.format(dcPPQ3.getDate()));
                pstmt.setString(4, sdf.format(dcPPQ4.getDate()));
                pstmt.setString(5, "Quarterly");
                pstmt.addBatch();
            }
            if (ChkSemiAnual.isSelected()) {
                pstmt.setString(1, sdf.format(dcPPSa1.getDate()));
                pstmt.setString(2, sdf.format(dcPPSa2.getDate()));
                pstmt.setString(3, "0");
                pstmt.setString(4, "0");
                pstmt.setString(5, "Semi-Annualy");
                pstmt.addBatch();
            }
            if (ChkAnual.isSelected()) {
                pstmt.setString(1, sdf.format(dcAnually.getDate()));
                pstmt.setString(2, "0");
                pstmt.setString(3, "0");
                pstmt.setString(4, "0");
                pstmt.setString(5, "Annualy");
                pstmt.addBatch();
            }
            if (Chkdaily.isSelected()) {
                pstmt.setString(1, "1");
                pstmt.setString(2, "0");
                pstmt.setString(3, "0");
                pstmt.setString(4, "0");
                pstmt.setString(5, "Daily");
                pstmt.addBatch();
            }
            int a[] = pstmt.executeBatch();

            if (!txtPaySlip.getText().isEmpty()) {
                pstmt.executeUpdate("update payslip_Setting set payslip_number = '" + txtPaySlip.getText().trim() + "' where id = '1'");
            }

            if (a.length > 0) {
                JOptionPane.showMessageDialog(this, "Payroll Frequencies setting updated.");
            }
            connection.commit();
        } catch (Exception e) {
            e.printStackTrace();
        }
        retPayroll();
        retPayslip();
    }//GEN-LAST:event_BtnApplyMouseClicked

    private void dcStartMonthPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcStartMonthPropertyChange
        // TODO add your handling code here:
        try{
        Calendar c = Calendar.getInstance();
        c.setTime(dcStartMonth.getDate());
        c.add(Calendar.MONTH, 1);
        dcEndMonth.setDate(c.getTime());
        }
        catch(Exception e)
        {
            dcStartMonth.setDate(new Date());
            e.printStackTrace();
        }
    }//GEN-LAST:event_dcStartMonthPropertyChange

    private void dcPPQ1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcPPQ1PropertyChange
        // TODO add your handling code here:
        Calendar c = Calendar.getInstance();
        c.setTime(dcPPQ1.getDate());
        c.add(Calendar.MONTH, 4);
        dcPPQ2.setDate(c.getTime());
        c.setTime(dcPPQ2.getDate());
        c.add(Calendar.MONTH, 4);
        dcPPQ3.setDate(c.getTime());
        c.setTime(dcPPQ3.getDate());
        c.add(Calendar.MONTH, 4);
        dcPPQ4.setDate(c.getTime());
    }//GEN-LAST:event_dcPPQ1PropertyChange

    private void dcPPSa1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dcPPSa1PropertyChange
        // TODO add your handling code here:
        Calendar c = Calendar.getInstance();
        c.setTime(dcPPSa1.getDate());
        c.add(Calendar.MONTH, 6);
        dcPPSa2.setDate(c.getTime());
    }//GEN-LAST:event_dcPPSa1PropertyChange

    private void ChkWeeklyPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ChkWeeklyPropertyChange
        // TODO add your handling code here:
         if (ChkWeekly.isSelected()) {
            txtWeekly.setEditable(true);
        } else {
            txtWeekly.setEditable(false);
        }
    }//GEN-LAST:event_ChkWeeklyPropertyChange

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnApply;
    private javax.swing.JCheckBox ChkAll;
    private javax.swing.JCheckBox ChkAnual;
    private javax.swing.JCheckBox ChkMonthly;
    private javax.swing.JCheckBox ChkQuar;
    private javax.swing.JCheckBox ChkSemiAnual;
    private javax.swing.JCheckBox ChkSemiMonthly;
    private javax.swing.JCheckBox ChkWeekly;
    private javax.swing.JCheckBox Chkdaily;
    private com.toedter.calendar.JDateChooser dcAnually;
    private com.toedter.calendar.JDateChooser dcEndMonth;
    private com.toedter.calendar.JDateChooser dcPPQ1;
    private com.toedter.calendar.JDateChooser dcPPQ2;
    private com.toedter.calendar.JDateChooser dcPPQ3;
    private com.toedter.calendar.JDateChooser dcPPQ4;
    private com.toedter.calendar.JDateChooser dcPPSa1;
    private com.toedter.calendar.JDateChooser dcPPSa2;
    private com.toedter.calendar.JDateChooser dcStartMonth;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtDaily;
    private javax.swing.JTextField txtPaySlip;
    private javax.swing.JTextField txtSemiMonth;
    private javax.swing.JTextField txtWeekly;
    // End of variables declaration//GEN-END:variables
}
