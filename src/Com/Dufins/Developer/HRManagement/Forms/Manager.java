/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.Dufins.Developer.HRManagement.Forms;

import Com.Dufins.Developer.LoginPkg.Login;
import Util.Util;
import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;

/**
 *
 * @author Owner
 */
public class Manager extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    ShiftSetting shift = null;
    Holiday holiday = null;
    LeaveSettings leave = null;
    SalaryParameter salary = null;
    TodaysAttendance tattendance = null;
    AttendanceSetting1 asetting = null;
    AttendanceLogs attendanceLog = null;
    Payrollfrequency payroll = null;
    AddEmployee addemp = null;
    TaxAllowance taxallowance = null;
    SetStatus setstatus = null;
    AssiginShift asignshift = null;
    TodayShift tshift = null;
    ViewShift vshift = null;
    AddLeave aleave = null;
    ViewLeave vleave = null;
    LeaveStatus sleave = null;
    AssiginTour atour = null;
    AssiginTraining atraining = null;
    ViewTour vtour = null;
    ViewTraining vtraining = null;
    TrainingTourPass tpass = null;
    AddExpenses aexpenses = null;
    IncrementDecrement id = null;
    EmployeeList elist = null;
    ViewExpenses viewexp = null;
    ViewIncrementDecrement viewincdec = null;
    AddPayroll addproll = null;
    AddManualPayment addmpay = null;
    ViewPayroll viewpay = null;
    ViewManualPayment viewmpay = null;
    PayrollPayslip ppslip = null;
    ManualPaymentPayslip mppslip = null;
    Color ppColor = new Color(0, 51, 255, 70);
  
    public Manager() {
        initComponents();
        getContentPane().setBackground(Color.white);
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowOpened(WindowEvent e) {
                setExtendedState(MAXIMIZED_BOTH);
            }
        });
        Image im = null;
        try {
            im = ImageIO.read(getClass().getResource("/Image/icon_2.png"));
        } catch (IOException ex) {
        }
        setIconImage(im);
        ImageIcon leafIcon = createImageIcon("/Image/minus.png");
        if (leafIcon != null) {
            DefaultTreeCellRenderer renderer =
                    new DefaultTreeCellRenderer();
            renderer.setLeafIcon(leafIcon);
            renderer.setOpenIcon(leafIcon);
            renderer.setClosedIcon(null);

            jtree_Menu.setCellRenderer(renderer);
        }
        getUser();
    }

    protected static ImageIcon createImageIcon(String path) {
        java.net.URL imgURL = Manager.class.getResource(path);
        if (imgURL != null) {
            return new ImageIcon(imgURL);
        } else {
            System.err.println("Couldn't find file: " + path);
            return null;
        }
    }

    private void getUser() {
        try {
            try (Connection connection = Util.getConnection();
                    Statement stm = connection.createStatement();
                    ResultSet rs = stm.executeQuery("select username from login where active = 'Y' ")) {
                if (rs.next()) {
                    jMenu5.setText(rs.getString(1).toUpperCase());
                } else {
                    jMenu5.setText("Guest".toUpperCase());
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jtree_Menu = new javax.swing.JTree();
        imagePanel1 = new javax.swing.JDesktopPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenu10 = new javax.swing.JMenu();
        jMenu11 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Dufins HR - Managment Software Version 1.2");
        setBackground(new java.awt.Color(231, 243, 243));
        setLocationByPlatform(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                formPropertyChange(evt);
            }
        });

        jScrollPane2.setBorder(null);
        jScrollPane2.setOpaque(false);

        jtree_Menu.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Setup");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Masters");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Shift Settings");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Holiday Settings");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Leave Settings");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Attendance Settings");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Salary Parameter");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Tax & Allowance");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Payroll Frequencies");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Employee");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Add Employees");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Employees List");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Attendance");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Set Status");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Todays Attendance");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Attendance Log");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Shift Schedular");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Assigin Shift");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Today Shift");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("view Shift");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Leave");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Add Leave");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("View Leave");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Leave Status");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Tour & Training");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Assigin Tour");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Assigin Training");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("View Tour");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("View Training");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Training & Tour Pass");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Expenses & Increment");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Add Expenses");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Increment/Decrement");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("View Expenses");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("View  Increment/Decrement");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Payroll");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Add Payroll");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Add Manual Payment");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("View Payroll");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("View  Manual Payment");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Payslip");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Payroll Payslip");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Manual Payment Payslip");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        jtree_Menu.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jtree_Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtree_MenuMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtree_MenuMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(jtree_Menu);
        //ImageIcon greenIcon = new ImageIcon("d://r.png" );
        //DefaultTreeCellRenderer renderer = (DefaultTreeCellRenderer) jTree1.getCellRenderer();
        DefaultTreeCellRenderer renderer2 = new DefaultTreeCellRenderer();
        Color ppColor5 = new Color(255,255, 255);
        renderer2.setBackgroundNonSelectionColor(ppColor5);//ClosedIcon(greenIcon);
        renderer2.setBackgroundNonSelectionColor(ppColor5);//ClosedIcon(greenIcon);
        renderer2.setTextSelectionColor(Color.BLACK);
        jtree_Menu.setCellRenderer(renderer2);

        imagePanel1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                imagePanel1PropertyChange(evt);
            }
        });

        jMenu3.setText("USER ID:");
        jMenuBar1.add(jMenu3);

        jMenu5.setText("jMenu5");
        jMenuBar1.add(jMenu5);

        jMenu6.setText("|");
        jMenuBar1.add(jMenu6);

        jMenu7.setText("Login Time :");
        jMenuBar1.add(jMenu7);

        jMenu8.setText("jMenu8");
        jMenuBar1.add(jMenu8);

        jMenu9.setText("|");
        jMenuBar1.add(jMenu9);

        jMenu10.setText("Date :");
        jMenuBar1.add(jMenu10);

        jMenu11.setText("jMenu11");
        jMenuBar1.add(jMenu11);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(imagePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addComponent(imagePanel1)
        );

        Color ppColor1 = new Color(231,243,243);
        jScrollPane2.getViewport().setBackground(ppColor1);
        jScrollPane2.getVerticalScrollBar().setBackground(Color.RED);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        //  jScrollPane2.setBackground(ppColor);[231,243,243]
        Color ppColor1 = new Color(231, 243, 243);
        jScrollPane2.getViewport().setBackground(ppColor1);


    }//GEN-LAST:event_formWindowOpened

    private void imagePanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_imagePanel1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_imagePanel1MouseEntered

    private void jtree_MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtree_MenuMouseClicked
        // TODO add your handling code here:
        try {
            TreePath selectionPath = jtree_Menu.getSelectionPath();
            String selected = selectionPath.getLastPathComponent().toString();
            System.out.println(selected);
            int width_Imagepanel = imagePanel1.getWidth();
            int height_Imagepanel = imagePanel1.getHeight();

            switch (selected) {
                case "Shift Settings":
                    shift = new ShiftSetting();
                    imagePanel1.removeAll();
                    shift.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    shift.setVisible(true);
                    imagePanel1.add(shift);
                    this.repaint();
                    break;
                case "Holiday Settings":
                    holiday = new Holiday();
                    imagePanel1.removeAll();
                    holiday.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    holiday.setVisible(true);
                    imagePanel1.add(holiday);
                    this.repaint();
                    break;
                case "Leave Settings":
                    leave = new LeaveSettings();
                    imagePanel1.removeAll();
                    leave.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    leave.setVisible(true);
                    imagePanel1.add(leave);
                    repaint();
                    break;
                case "Attendance Settings":
                    asetting = new AttendanceSetting1();
                    imagePanel1.removeAll();
                    asetting.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    asetting.setVisible(true);
                    imagePanel1.add(asetting);
                    this.repaint();
                    break;
                case "Salary Parameter":
                    salary = new SalaryParameter();
                    imagePanel1.removeAll();
                    salary.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    salary.setVisible(true);
                    imagePanel1.add(salary);
                    this.repaint();
                    break;
                case "Tax & Allowance":
                    taxallowance = new TaxAllowance();
                    imagePanel1.removeAll();
                    taxallowance.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    taxallowance.setVisible(true);
                    imagePanel1.add(taxallowance);
                    this.repaint();
                    break;
                case "Payroll Frequencies":
                    payroll = new Payrollfrequency();
                    imagePanel1.removeAll();
                    payroll.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    payroll.setVisible(true);
                    imagePanel1.add(payroll);
                    repaint();
                    break;

                case "Add Employees":
                    addemp = new AddEmployee();
                    imagePanel1.removeAll();
                    addemp.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    addemp.setVisible(true);
                    imagePanel1.add(addemp);
                    this.repaint();
                    break;
                case "Employees List":
                    elist = new EmployeeList();
                    imagePanel1.removeAll();
                    elist.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    elist.setVisible(true);
                    imagePanel1.add(elist);
                    this.repaint();
                    break;
                case "Todays Attendance":
                    tattendance = new TodaysAttendance();
                    imagePanel1.removeAll();
                    tattendance.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    tattendance.setVisible(true);
                    imagePanel1.add(tattendance);
                    this.repaint();
                    break;
                case "Attendance Log":
                    attendanceLog = new AttendanceLogs();
                    imagePanel1.removeAll();
                    attendanceLog.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    attendanceLog.setVisible(true);
                    imagePanel1.add(attendanceLog);
                    this.repaint();
                    break;

                case "Set Status":
                    setstatus = new SetStatus();
                    imagePanel1.removeAll();
                    setstatus.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    setstatus.setVisible(true);
                    imagePanel1.add(setstatus);
                    this.repaint();
                    break;
                case "Assigin Shift":
                    asignshift = new AssiginShift();
                    imagePanel1.removeAll();
                    asignshift.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    asignshift.setVisible(true);
                    imagePanel1.add(asignshift);
                    this.repaint();
                    break;
                case "Today Shift":
                    tshift = new TodayShift();
                    imagePanel1.removeAll();
                    tshift.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    tshift.setVisible(true);
                    imagePanel1.add(tshift);
                    this.repaint();
                    break;
                case "view Shift":
                    vshift = new ViewShift();
                    imagePanel1.removeAll();
                    vshift.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    vshift.setVisible(true);
                    imagePanel1.add(vshift);
                    this.repaint();
                    break;
                case "Add Leave":
                    aleave = new AddLeave();
                    imagePanel1.removeAll();
                    aleave.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    aleave.setVisible(true);
                    imagePanel1.add(aleave);
                    this.repaint();
                    break;
                case "View Leave":
                    vleave = new ViewLeave();
                    imagePanel1.removeAll();
                    vleave.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    aleave.setVisible(true);
                    imagePanel1.add(vleave);
                    this.repaint();
                    break;
                case "Leave Status":
                    sleave = new LeaveStatus();
                    imagePanel1.removeAll();
                    sleave.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    sleave.setVisible(true);
                    imagePanel1.add(sleave);
                    this.repaint();
                    break;
                case "Assigin Tour":
                    atour = new AssiginTour();
                    imagePanel1.removeAll();
                    atour.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    atour.setVisible(true);
                    imagePanel1.add(atour);
                    this.repaint();
                    break;
                case "Assigin Training":
                    atraining = new AssiginTraining();
                    imagePanel1.removeAll();
                    atraining.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    atraining.setVisible(true);
                    imagePanel1.add(atraining);
                    this.repaint();
                    break;
                case "View Tour":
                    vtour = new ViewTour();
                    imagePanel1.removeAll();
                    vtour.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    vtour.setVisible(true);
                    imagePanel1.add(vtour);
                    this.repaint();
                    break;
                case "View Training":
                    vtraining = new ViewTraining();
                    imagePanel1.removeAll();
                    vtraining.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    vtraining.setVisible(true);
                    imagePanel1.add(vtraining);
                    this.repaint();
                    break;
                case "Training & Tour Pass":
                    tpass = new TrainingTourPass();
                    imagePanel1.removeAll();
                    tpass.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    tpass.setVisible(true);
                    imagePanel1.add(tpass);
                    this.repaint();
                    break;
                case "Add Expenses":
                    aexpenses = new AddExpenses();
                    imagePanel1.removeAll();
                    aexpenses.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    aexpenses.setVisible(true);
                    imagePanel1.add(aexpenses);
                    this.repaint();
                    break;
                case "Increment/Decrement":
                    id = new IncrementDecrement();
                    imagePanel1.removeAll();
                    id.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    id.setVisible(true);
                    imagePanel1.add(id);
                    this.repaint();
                    break;
                case "View Expenses":
                    viewexp = new ViewExpenses();
                    imagePanel1.removeAll();
                    viewexp.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    viewexp.setVisible(true);
                    imagePanel1.add(viewexp);
                    this.repaint();
                    break;
                case "View  Increment/Decrement":
                    viewincdec = new ViewIncrementDecrement();
                    imagePanel1.removeAll();
                    viewincdec.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    viewincdec.setVisible(true);
                    imagePanel1.add(viewincdec);
                    this.repaint();
                    break;
                case "Add Payroll":
                    addproll = new AddPayroll();
                    imagePanel1.removeAll();
                    addproll.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    addproll.setVisible(true);
                    imagePanel1.add(addproll);
                    this.repaint();
                    break;
                case "Add Manual Payment":
                    addmpay = new AddManualPayment();
                    imagePanel1.removeAll();
                    addmpay.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    addmpay.setVisible(true);
                    imagePanel1.add(addmpay);
                    this.repaint();
                    break;
                case "View Payroll":
                    viewpay = new ViewPayroll();
                    imagePanel1.removeAll();
                    viewpay.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    viewpay.setVisible(true);
                    imagePanel1.add(viewpay);
                    this.repaint();
                    break;
                case "View  Manual Payment":
                    viewmpay = new ViewManualPayment();
                    imagePanel1.removeAll();
                    viewmpay.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    viewmpay.setVisible(true);
                    imagePanel1.add(viewmpay);
                    this.repaint();
                    break;
                case "Payroll Payslip":
                    ppslip = new PayrollPayslip();
                    imagePanel1.removeAll();
                    ppslip.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    ppslip.setVisible(true);
                    imagePanel1.add(ppslip);
                    this.repaint();
                    break;
                case "Manual Payment Payslip":
                    mppslip = new ManualPaymentPayslip();
                    imagePanel1.removeAll();
                    mppslip.setBounds(0, 0, width_Imagepanel, height_Imagepanel);
                    mppslip.setVisible(true);
                    imagePanel1.add(mppslip);
                    this.repaint();
                    break;

            }
        } catch (NullPointerException ex) {
        }

    }//GEN-LAST:event_jtree_MenuMouseClicked

    private void jtree_MenuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtree_MenuMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtree_MenuMousePressed

    private void imagePanel1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_imagePanel1PropertyChange
        // TODO add your handling code here:
        
    }//GEN-LAST:event_imagePanel1PropertyChange

    private void formPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_formPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_formPropertyChange

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowStateChanged

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        new Login().setVisible(true);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Manager().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane imagePanel1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu11;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTree jtree_Menu;
    // End of variables declaration//GEN-END:variables
}
