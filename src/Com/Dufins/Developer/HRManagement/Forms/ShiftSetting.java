/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Com.Dufins.Developer.HRManagement.Forms;

import Util.Util;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author Owner
 */
public class ShiftSetting extends javax.swing.JPanel {

    /**
     * Creates new form ShiftSetting
     */
    int count = 0;
    Connection connection = null;

    public ShiftSetting() {
        initComponents();
        try {
            connection = Util.getConnection();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        showShift();

    }

    private void showShift() {
        try {
            PreparedStatement pstShown = connection.prepareStatement("select * from shift_setting where shifting_time = ?");
            pstShown.setString(1, "General");
            ResultSet rs = pstShown.executeQuery();
            if (rs.next()) {
                jSpinner_starttime.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("start_time")));
                jSpinner_endtime.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("end_time")));
                txtAllSCharge.setText(rs.getString("shifting_charge"));
            }

            pstShown.setString(1, "Morning");
            rs = pstShown.executeQuery();
            if (rs.next()) {
                jSpinner_mStart.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("start_time")));
                jSpinner_mEnd.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("end_time")));
                txtMorning.setText(rs.getString("shifting_charge"));
            }

            pstShown.setString(1, "Day");
            rs = pstShown.executeQuery();
            if (rs.next()) {
                jSpinner_dStart.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("start_time")));
                jSpinner_dEnd.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("end_time")));
                txtDay.setText(rs.getString("shifting_charge"));
            }

            pstShown.setString(1, "Afternoon");
            rs = pstShown.executeQuery();
            if (rs.next()) {
                jSpinner_aStart.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("start_time")));
                jSpinner_aEnd.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("end_time")));
                txtAfternoon.setText(rs.getString("shifting_charge"));
            }

            pstShown.setString(1, "Evening");
            rs = pstShown.executeQuery();
            if (rs.next()) {
                jSpinner_eStart.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("start_time")));
                jSpinner_eEnd.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("end_time")));
                txtEvening.setText(rs.getString("shifting_charge"));
            }

            pstShown.setString(1, "Night");
            rs = pstShown.executeQuery();
            if (rs.next()) {
                jSpinner_nStart.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("start_time")));
                jSpinner_nEnd.setValue(new SimpleDateFormat("HH:mm:ss").parse(rs.getString("end_time")));
                txtNight.setText(rs.getString("shifting_charge"));
            }


        }
        catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner3 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        ChkGeneral = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jSpinner_starttime = new javax.swing.JSpinner();
        jSpinner_endtime = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        txtAllSCharge = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        ChkAll = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        ChkMorning = new javax.swing.JCheckBox();
        ChkDay = new javax.swing.JCheckBox();
        ChkAfternoon = new javax.swing.JCheckBox();
        ChkEvening = new javax.swing.JCheckBox();
        ChkNight = new javax.swing.JCheckBox();
        txtMorning = new javax.swing.JTextField();
        txtDay = new javax.swing.JTextField();
        txtAfternoon = new javax.swing.JTextField();
        txtEvening = new javax.swing.JTextField();
        txtNight = new javax.swing.JTextField();
        jSpinner_mStart = new javax.swing.JSpinner();
        jSpinner_dStart = new javax.swing.JSpinner();
        jSpinner_aStart = new javax.swing.JSpinner();
        jSpinner_eStart = new javax.swing.JSpinner();
        jSpinner_nStart = new javax.swing.JSpinner();
        jSpinner_mEnd = new javax.swing.JSpinner();
        jSpinner_dEnd = new javax.swing.JSpinner();
        jSpinner_aEnd = new javax.swing.JSpinner();
        jSpinner_eEnd = new javax.swing.JSpinner();
        jSpinner_nEnd = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        BtnApply = new javax.swing.JLabel();
        BtnCancel = new javax.swing.JLabel();

        jSpinner3.setModel(new javax.swing.SpinnerDateModel());
        jSpinner3.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner3, "hh:mm a"));

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Shift Settings", 2, 3, new java.awt.Font("Arial", 1, 18), new java.awt.Color(0, 0, 51))); // NOI18N
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                formComponentAdded(evt);
            }
        });
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Working Duration", 2, 3, new java.awt.Font("Arial", 1, 14), java.awt.Color.white)); // NOI18N

        ChkGeneral.setBackground(new java.awt.Color(255, 255, 255));
        ChkGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkGeneralActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("Greneral Shift End Time (hh:mm) :");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Duration");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Greneral Shift Start Time (hh:mm) :");

        jSpinner_starttime.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_starttime.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_starttime, "hh:mm a"));

        jSpinner_endtime.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_endtime.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_endtime, "hh:mm a"));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Shift Charge");

        txtAllSCharge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAllSChargeKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ChkGeneral)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSpinner_endtime, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner_starttime, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, 0, 90, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAllSCharge)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSpinner_starttime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(ChkGeneral))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_endtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtAllSCharge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Settings", 2, 3, new java.awt.Font("Arial", 1, 18), java.awt.Color.white)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Shift Name");

        ChkAll.setBackground(new java.awt.Color(255, 255, 255));
        ChkAll.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        ChkAll.setText("Select All");
        ChkAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkAllActionPerformed(evt);
            }
        });
        ChkAll.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ChkAllPropertyChange(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Start Time");

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("End Time");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Shift Charge");

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("Morning Shift     :");

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("Day Shift             :");

        jLabel11.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel11.setText("Afternoon Shift  :");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel12.setText("Evening Shift      :");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setText("Night Shift           :");

        ChkMorning.setBackground(new java.awt.Color(255, 255, 255));
        ChkMorning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkMorningActionPerformed(evt);
            }
        });
        ChkMorning.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ChkMorningPropertyChange(evt);
            }
        });

        ChkDay.setBackground(new java.awt.Color(255, 255, 255));
        ChkDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkDayActionPerformed(evt);
            }
        });
        ChkDay.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ChkDayPropertyChange(evt);
            }
        });

        ChkAfternoon.setBackground(new java.awt.Color(255, 255, 255));
        ChkAfternoon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkAfternoonActionPerformed(evt);
            }
        });
        ChkAfternoon.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ChkAfternoonPropertyChange(evt);
            }
        });

        ChkEvening.setBackground(new java.awt.Color(255, 255, 255));
        ChkEvening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkEveningActionPerformed(evt);
            }
        });
        ChkEvening.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ChkEveningPropertyChange(evt);
            }
        });

        ChkNight.setBackground(new java.awt.Color(255, 255, 255));
        ChkNight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChkNightActionPerformed(evt);
            }
        });
        ChkNight.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ChkNightPropertyChange(evt);
            }
        });

        txtMorning.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMorningActionPerformed(evt);
            }
        });
        txtMorning.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMorningKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMorningKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMorningKeyTyped(evt);
            }
        });

        txtDay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDayKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDayKeyTyped(evt);
            }
        });

        txtAfternoon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAfternoonKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAfternoonKeyTyped(evt);
            }
        });

        txtEvening.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEveningKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEveningKeyTyped(evt);
            }
        });

        txtNight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNightKeyTyped(evt);
            }
        });

        jSpinner_mStart.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_mStart.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_mStart, "hh:mm a"));

        jSpinner_dStart.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_dStart.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_dStart, "hh:mm a"));

        jSpinner_aStart.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_aStart.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_aStart, "hh:mm a"));

        jSpinner_eStart.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_eStart.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_eStart, "hh:mm a"));

        jSpinner_nStart.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_nStart.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_nStart, "hh:mm a"));

        jSpinner_mEnd.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_mEnd.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_mEnd, "hh:mm a"));

        jSpinner_dEnd.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_dEnd.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_dEnd, "hh:mm a"));

        jSpinner_aEnd.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_aEnd.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_aEnd, "hh:mm a"));

        jSpinner_eEnd.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_eEnd.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_eEnd, "hh:mm a"));

        jSpinner_nEnd.setModel(new javax.swing.SpinnerDateModel());
        jSpinner_nEnd.setEditor(new javax.swing.JSpinner.DateEditor(jSpinner_nEnd, "hh:mm a"));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChkAll)
                            .addComponent(ChkDay)
                            .addComponent(ChkMorning))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(63, 63, 63)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jSpinner_dStart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner_dEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner_mEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jSpinner_mStart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ChkAfternoon)
                            .addComponent(ChkEvening)
                            .addComponent(ChkNight))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner_aStart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_eStart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_nStart, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSpinner_aEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_eEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinner_nEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)))
                .addGap(66, 66, 66)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMorning, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtAfternoon, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtEvening, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtNight, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ChkAll)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtMorning, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDay, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtAfternoon, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtEvening, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(txtNight, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(ChkMorning)))
                                .addGap(28, 28, 28)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(ChkDay))
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jSpinner_mStart, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jSpinner_mEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(50, 50, 50))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner_dStart, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner_dEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner_aStart, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner_aEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner_eStart, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner_eEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jSpinner_nStart, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner_nEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(ChkAfternoon)))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ChkEvening))
                                .addGap(22, 22, 22)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(ChkNight)))))))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nilaicon.png"))); // NOI18N

        BtnApply.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/save_as.png"))); // NOI18N
        BtnApply.setToolTipText("Apply Setting");
        BtnApply.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        BtnApply.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnApply.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnApplyMouseClicked(evt);
            }
        });

        BtnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Crystal_button_cancel.png"))); // NOI18N
        BtnCancel.setToolTipText("Close panel");
        BtnCancel.setBorder(javax.swing.BorderFactory.createBevelBorder(0));
        BtnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BtnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCancelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(BtnApply)
                            .addGap(18, 18, 18)
                            .addComponent(BtnCancel))
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnApply)
                    .addComponent(BtnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseEntered

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusGained

    private void ChkAllPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ChkAllPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkAllPropertyChange

    private void ChkMorningPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ChkMorningPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkMorningPropertyChange

    private void ChkDayPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ChkDayPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkDayPropertyChange

    private void ChkAfternoonPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ChkAfternoonPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkAfternoonPropertyChange

    private void ChkEveningPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ChkEveningPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkEveningPropertyChange

    private void ChkNightPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ChkNightPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkNightPropertyChange

    private void ChkAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkAllActionPerformed
        // TODO add your handling code here:
        if (ChkAll.isSelected()) {
            ChkAfternoon.setSelected(true);
            ChkDay.setSelected(true);
            ChkEvening.setSelected(true);
            ChkMorning.setSelected(true);
            ChkNight.setSelected(true);
            count = 5;
        } else {
            ChkAfternoon.setSelected(false);
            ChkDay.setSelected(false);
            ChkEvening.setSelected(false);
            ChkMorning.setSelected(false);
            ChkNight.setSelected(false);
            count = 0;
        }
    }//GEN-LAST:event_ChkAllActionPerformed

    private void ChkMorningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkMorningActionPerformed
        // TODO add your handling code here:
        if (ChkMorning.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 5) {
            ChkAll.setSelected(true);
        }
        System.out.println("count " + count);

    }//GEN-LAST:event_ChkMorningActionPerformed

    private void ChkDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkDayActionPerformed
        // TODO add your handling code here:
        if (ChkDay.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 5) {
            ChkAll.setSelected(true);
        }
        System.out.println("count " + count);
    }//GEN-LAST:event_ChkDayActionPerformed

    private void ChkAfternoonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkAfternoonActionPerformed
        // TODO add your handling code here:
        if (ChkAfternoon.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 5) {
            ChkAll.setSelected(true);
        }
        System.out.println("count " + count);
    }//GEN-LAST:event_ChkAfternoonActionPerformed

    private void ChkEveningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkEveningActionPerformed
        // TODO add your handling code here:
        if (ChkEvening.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 5) {
            ChkAll.setSelected(true);
        }
        System.out.println("count " + count);
    }//GEN-LAST:event_ChkEveningActionPerformed

    private void ChkNightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkNightActionPerformed
        // TODO add your handling code here:
        if (ChkNight.isSelected()) {
            count++;
        } else {
            ChkAll.setSelected(false);
            count--;
        }
        if (count == 5) {
            ChkAll.setSelected(true);
        }
        System.out.println("count " + count);
    }//GEN-LAST:event_ChkNightActionPerformed

    private void ChkGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChkGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChkGeneralActionPerformed

    private void BtnApplyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnApplyMouseClicked
        // TODO add your handling code here:k 
        if (count <= 0 && ChkGeneral.isSelected() == false) {
            JOptionPane.showMessageDialog(this, "Please check your selection.");
            return;
        }
        try {
            PreparedStatement pstmt = connection.prepareStatement("update shift_setting set start_time = ?, end_time = ?, shifting_charge = ? where shifting_time = ? ");
            SimpleDateFormat sd = new SimpleDateFormat("HH:mm:ss");
            if (ChkGeneral.isSelected()) {
                pstmt.setString(1, sd.format(jSpinner_starttime.getValue()));
                pstmt.setString(2, sd.format(jSpinner_endtime.getValue()));
                pstmt.setString(3, txtAllSCharge.getText());
                pstmt.setString(4, "General");
                pstmt.executeUpdate();
            }
            if (ChkMorning.isSelected()) {
                pstmt.setString(1, sd.format(jSpinner_mStart.getValue()));
                pstmt.setString(2, sd.format(jSpinner_mEnd.getValue()));
                pstmt.setString(3, txtMorning.getText());
                pstmt.setString(4, "Morning");
                pstmt.executeUpdate();
            }
            if (ChkDay.isSelected()) {

                pstmt.setString(1, sd.format(jSpinner_dStart.getValue()));
                pstmt.setString(2, sd.format(jSpinner_dEnd.getValue()));
                pstmt.setString(3, txtDay.getText());
                pstmt.setString(4, "Day");
                pstmt.executeUpdate();
            }
            if (ChkAfternoon.isSelected()) {
                pstmt.setString(1, sd.format(jSpinner_aStart.getValue()));
                pstmt.setString(2, sd.format(jSpinner_aEnd.getValue()));
                pstmt.setString(3, txtAfternoon.getText());
                pstmt.setString(4, "Afternoon");
                pstmt.executeUpdate();
            }
            if (ChkEvening.isSelected()) {
                pstmt.setString(1, sd.format(jSpinner_eStart.getValue()));
                pstmt.setString(2, sd.format(jSpinner_eEnd.getValue()));
                pstmt.setString(3, txtEvening.getText());
                pstmt.setString(4, "Evening");
                pstmt.executeUpdate();
            }
            if (ChkNight.isSelected()) {
                pstmt.setString(1, sd.format(jSpinner_nStart.getValue()));
                pstmt.setString(2, sd.format(jSpinner_nEnd.getValue()));
                pstmt.setString(3, txtNight.getText());
                pstmt.setString(4, "Night");
                pstmt.executeUpdate();
            }
            JOptionPane.showMessageDialog(this, "Global shift setting updated.");
            pstmt.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_BtnApplyMouseClicked

    private void formComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_formComponentAdded
    }//GEN-LAST:event_formComponentAdded

    private void txtMorningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMorningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMorningActionPerformed

    private void txtMorningKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMorningKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMorningKeyReleased

    private void txtMorningKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMorningKeyPressed
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        if (code == java.awt.event.KeyEvent.VK_TAB) {
            txtDay.requestFocus();
        }
    }//GEN-LAST:event_txtMorningKeyPressed

    private void txtDayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDayKeyPressed
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        if (code == java.awt.event.KeyEvent.VK_TAB) {
            txtAfternoon.requestFocus();
        }
    }//GEN-LAST:event_txtDayKeyPressed

    private void txtAfternoonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAfternoonKeyPressed
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        if (code == java.awt.event.KeyEvent.VK_TAB) {
            txtEvening.requestFocus();
        }
    }//GEN-LAST:event_txtAfternoonKeyPressed

    private void txtEveningKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEveningKeyPressed
        // TODO add your handling code here:
        int code = evt.getKeyCode();
        if (code == java.awt.event.KeyEvent.VK_TAB) {
            txtNight.requestFocus();
        }
    }//GEN-LAST:event_txtEveningKeyPressed

    private void BtnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCancelMouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_BtnCancelMouseClicked

    private void txtAllSChargeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAllSChargeKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!Character.isDigit(ch) && !(evt.getKeyChar() == '.')) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Enter only numeric character.");
        }
    }//GEN-LAST:event_txtAllSChargeKeyTyped

    private void txtMorningKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMorningKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!Character.isDigit(ch) && !(evt.getKeyChar() == '.')) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Enter only numeric character.");
        }
    }//GEN-LAST:event_txtMorningKeyTyped

    private void txtDayKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDayKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!Character.isDigit(ch) && !(evt.getKeyChar() == '.')) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Enter only numeric character.");
        }
    }//GEN-LAST:event_txtDayKeyTyped

    private void txtAfternoonKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAfternoonKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!Character.isDigit(ch) && !(evt.getKeyChar() == '.')) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Enter only numeric character.");
        }
    }//GEN-LAST:event_txtAfternoonKeyTyped

    private void txtEveningKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEveningKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!Character.isDigit(ch) && !(evt.getKeyChar() == '.')) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Enter only numeric character.");
        }
    }//GEN-LAST:event_txtEveningKeyTyped

    private void txtNightKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNightKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        if (!Character.isDigit(ch) && !(evt.getKeyChar() == '.')) {
            evt.consume();
            JOptionPane.showMessageDialog(this, "Enter only numeric character.");
        }
    }//GEN-LAST:event_txtNightKeyTyped

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BtnApply;
    private javax.swing.JLabel BtnCancel;
    private javax.swing.JCheckBox ChkAfternoon;
    private javax.swing.JCheckBox ChkAll;
    private javax.swing.JCheckBox ChkDay;
    private javax.swing.JCheckBox ChkEvening;
    private javax.swing.JCheckBox ChkGeneral;
    private javax.swing.JCheckBox ChkMorning;
    private javax.swing.JCheckBox ChkNight;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel4;
    private javax.swing.JSpinner jSpinner3;
    private javax.swing.JSpinner jSpinner_aEnd;
    private javax.swing.JSpinner jSpinner_aStart;
    private javax.swing.JSpinner jSpinner_dEnd;
    private javax.swing.JSpinner jSpinner_dStart;
    private javax.swing.JSpinner jSpinner_eEnd;
    private javax.swing.JSpinner jSpinner_eStart;
    private javax.swing.JSpinner jSpinner_endtime;
    private javax.swing.JSpinner jSpinner_mEnd;
    private javax.swing.JSpinner jSpinner_mStart;
    private javax.swing.JSpinner jSpinner_nEnd;
    private javax.swing.JSpinner jSpinner_nStart;
    private javax.swing.JSpinner jSpinner_starttime;
    private javax.swing.JTextField txtAfternoon;
    private javax.swing.JTextField txtAllSCharge;
    private javax.swing.JTextField txtDay;
    private javax.swing.JTextField txtEvening;
    private javax.swing.JTextField txtMorning;
    private javax.swing.JTextField txtNight;
    // End of variables declaration//GEN-END:variables
}
