package Com.Dufins.Developer.LoginPkg;

import Com.Dufins.Developer.Admission.Forms.AddmissionReciept;
import Com.Dufins.Developer.Applications.Library.BookKeeper;
import Com.Dufins.Developer.HRManagement.Forms.Manager;
import Com.Dufins.Developer.STManagement.Forms.RegistrationBook;
import Com.Dufins.Developer.SetupAdmin.Setup_Admission;
import Util.DatabaseEXE;
import Util.Util;
import com.mysql.jdbc.PreparedStatement;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Timer;
import java.util.TimerTask;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

public class Login extends javax.swing.JFrame {

    Connection con = null;
    PreparedStatement psmnt = null;
    Statement stmt = null;
    ResultSet rs = null;
    String user = null;
    String pass = null;
    private SimpleDateFormat sdf = new SimpleDateFormat("h:mm a");
    private int currentSecond;
    private Calendar calendar;

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        Image im = null;
        try {
            im = ImageIO.read(getClass().getResource("/Image/icon_2.png"));
        } catch (IOException ex) {
        }
        setIconImage(im);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_userid = new javax.swing.JTextField();
        txt_pass = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lbl_date = new javax.swing.JLabel();
        lbl_time = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("cmsDufins Version 1.0");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Login", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 14), new java.awt.Color(102, 0, 0))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setText("User id");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Password");

        txt_userid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_useridActionPerformed(evt);
            }
        });

        txt_pass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_passActionPerformed(evt);
            }
        });

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        lbl_date.setForeground(new java.awt.Color(0, 0, 255));
        lbl_date.setText("jLabel3");

        lbl_time.setForeground(new java.awt.Color(0, 0, 255));
        lbl_time.setText("jLabel3");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/login.jpg"))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText(" www.dufins.com");
        jLabel4.setToolTipText("goto website");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(txt_userid, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jButton1)
                        .addGap(50, 50, 50)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addGap(66, 66, 66)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_time)
                    .addComponent(lbl_date))
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lbl_date)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_time))
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1))
                    .addComponent(txt_userid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addComponent(txt_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(511, 335));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        txt_userid.requestFocus();
        retriveDateformat();
        start();

    }//GEN-LAST:event_formWindowOpened

    private void reset() {
        calendar = Calendar.getInstance();
        currentSecond = calendar.get(Calendar.SECOND);
    }

    public void start() {
        reset();
        Timer timer = new Timer();
        timer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                if (currentSecond == 60) {
                    reset();
                }
                lbl_time.setText(String.format("%s", sdf.format(calendar.getTime())));
                currentSecond++;


            }
        }, 0, 1000);
    }

    public void retriveDateformat() {
        try {
            con = Util.getConnection();
            stmt = con.createStatement();
            rs = stmt.executeQuery("select * from dateformat");
            if (rs.next()) {
                Date d = new Date();
                SimpleDateFormat formatter = new SimpleDateFormat(rs.getString(1));
                String s = formatter.format(d);
                lbl_date.setText(s);
            }
        } catch (Exception e) {
        }
    }

    public void addlog() throws SQLException {
        user = txt_userid.getText().trim();
        try {
            con = Util.getConnection();
            stmt = con.createStatement();

            int a = stmt.executeUpdate("insert into log(username,date,time) values('" + user + "','" + lbl_date.getText().trim() + "','" + lbl_time.getText().trim() + "')");
            if (a > 0) {
                System.out.println("Log details successfully updated.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            Util.closeResultset(rs);
            Util.closeStatement(stmt);
            Util.closeConnection(con);
        }

    }

    private void submit() {

        user = txt_userid.getText();
        pass = txt_pass.getText();
        String privilage = null;
        String sqluser = null;
        String sqlpass = null;
        try {
            con = Util.getConnection();
            stmt = con.createStatement();
            rs = stmt.executeQuery("select username,password,usertype  from login");
            while (rs.next()) {
                sqluser = rs.getString(1);
                sqlpass = rs.getString(2);
                privilage = rs.getString(3);

                if (sqluser.equals(user) && sqlpass.equals(pass)) {
                    if (privilage.equalsIgnoreCase("Admin")) {
                        addlog();
                        new Setup_Admission().setVisible(true);
                        //stmt.executeUpdate("update login set active = 'Y' where username = '" + sqluser + "' and usertype = '" + privilage + "' ");
                        dispose();
                        break;
                    } else if (privilage.equalsIgnoreCase("Account")) {
                        addlog();
                        new AddmissionReciept().setVisible(true);
                        //stmt.executeUpdate("update login set active = 'Y' where username = '" + sqluser + "' and usertype = '" + privilage + "' ");
                        dispose();
                        break;
                    } else if (privilage.equalsIgnoreCase("Registration")) {
                        addlog();
                        new RegistrationBook().setVisible(true);
                        //stmt.executeUpdate("update login set active = 'Y' where username = '" + sqluser + "' and usertype = '" + privilage + "' ");
                        dispose();
                        break;
                    } else if (privilage.equalsIgnoreCase("Library")) {
                        addlog();
                        new BookKeeper().setVisible(true);
                        //stmt.executeUpdate("update login set active = 'Y' where username = '" + sqluser + "' and usertype = '" + privilage + "' ");
                        dispose();
                        break;
                    }
                    else if (privilage.equalsIgnoreCase("HR")) {
                        addlog();
                        new Manager().setVisible(true);
                        //stmt.executeUpdate("update login set active = 'Y' where username = '" + sqluser + "' and usertype = '" + privilage + "' ");
                        dispose();
                        break;
                    }
                }
            }

            if (txt_userid.getText().equalsIgnoreCase("dufins") && txt_pass.getText().equalsIgnoreCase("@dufins123")) {
                DatabaseEXE dba = new DatabaseEXE();
                dba.setVisible(true);
                txt_userid.setText("");
                txt_pass.setText("");
                txt_userid.requestFocus();
            } else if (!sqluser.equals(user)
                    || !sqlpass.equals(pass)) {
                txt_userid.setText("");
                txt_pass.setText("");
                txt_userid.requestFocus();
                JOptionPane.showMessageDialog(null, "Enter correct User ID and Password");
            }

            System.out.println(
                    "sqlU = " + sqluser);
            System.out.println(
                    "sqlP = " + sqlpass);
            System.out.println(
                    "txtU = " + user);
            System.out.println(
                    "txtP = " + pass);


        } catch (SQLException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Database does not exist.\nERROR:- " + e.toString() + "\nContact to Dufins Technology");
            if (txt_userid.getText().equalsIgnoreCase("dufins") && txt_pass.getText().equalsIgnoreCase("@dufins123")) {
                DatabaseEXE dba = new DatabaseEXE();
                dba.setVisible(true);
                txt_userid.setText("");
                txt_pass.setText("");
                txt_userid.requestFocus();
            }
            e.printStackTrace();

        } finally {
            Util.closeResultset(rs);
            Util.closeStatement(stmt);
            Util.closeConnection(con);
        }

    }

    private void txt_useridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_useridActionPerformed
        if (txt_userid.getText().length() != 0) {
            txt_pass.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Please enter User ID");
        }
    }//GEN-LAST:event_txt_useridActionPerformed

    private void txt_passActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_passActionPerformed
        if (txt_pass.getText().length() != 0) {
            submit();
        } else {
            JOptionPane.showMessageDialog(null, "Please enter Password");
        }
    }//GEN-LAST:event_txt_passActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (txt_userid.getText().length() != 0) {
            txt_passActionPerformed(evt);
        } else {
            JOptionPane.showMessageDialog(null, "Please enter User ID");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dispose();
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        try {
            String URL = "http://www.dufins.com/";
            java.awt.Desktop.getDesktop().browse(java.net.URI.create(URL));
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jLabel4MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JLabel lbl_time;
    private javax.swing.JPasswordField txt_pass;
    private javax.swing.JTextField txt_userid;
    // End of variables declaration//GEN-END:variables
}
